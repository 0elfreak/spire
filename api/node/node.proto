syntax = "proto3";
package proto;

message RegistrationEntry {
    string selectorType = 1;
    string selector = 2;
    string attestor = 3;
    string spiffeId = 4;
    bytes federatedBundle = 5;
    int32 ttl = 6;
}

message FetchBootstrapSVIDRequest {
    message AttestedData {
        string type = 1;
        string data = 2;
    }

    AttestedData attestedData = 1;
    bytes csr = 2;
}

message FetchBootstrapSVIDResponse {
    bytes cert = 1;
    repeated RegistrationEntry registrationEntryList = 2;
    int64 nonce = 3;
}

message FetchNodeSVIDRequest {
    int64 nonce = 1;
    repeated bytes csrList = 2;
}

message FetchNodeSVIDResponse{
    map<string, bytes> certMap = 1;
    repeated RegistrationEntry registrationEntryList = 2;
}

message FetchWorkloadSVIDRequest {
    repeated bytes csrList = 2;
}

message FetchWorkloadSVIDResponse{
    map<string, bytes> certMap = 1;
    repeated RegistrationEntry registrationEntryList = 2;
}

message FetchCPBundleRequest {
}

message FetchCPBundleResponse{
    bytes cpBundle = 1;
}

message Empty {}

service node {
    rpc FetchBootstrapSVID(FetchBootstrapSVIDRequest) returns (FetchBootstrapSVIDResponse);
    rpc FetchNodeSVID(FetchNodeSVIDRequest) returns (FetchNodeSVIDResponse);
    rpc FetchWorkloadSVID(FetchWorkloadSVIDRequest) returns (FetchWorkloadSVIDResponse);
    rpc FetchCPBundle(FetchCPBundleRequest) returns (FetchCPBundleResponse);
}



