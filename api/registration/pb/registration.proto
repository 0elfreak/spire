syntax = "proto3";
package pb;


message RegisteredEntry {
    string selectorType = 1;
    string selector = 2;
    string attestor = 3;
    string spiffeId = 4;
    int32 ttl = 5;
    repeated string federateBundleSpiffeIdList = 6;
}

message FederatedBundle {
    string federateBundleSpiffeId = 1;
    bytes federateBundle = 2;
    int32 ttl = 3;
}


message CreateEntryRequest {
    RegisteredEntry registeredEntry  = 1;
}

message CreateEntryResponse {
}


message DeleteEntryRequest {
    string selectorType = 1;
    string selector = 2;
}

message DeleteEntryResponse {
    repeated RegisteredEntry registeredEntryList = 1;
}


message ListByAttestorRequest {
    string attestor  = 1;
}

message ListByAttestorResponse {
    repeated RegisteredEntry registeredEntryList = 1;
}


message ListBySelectorRequest {
    string selectorType = 1;
    string selector = 2;
}

message ListBySelectorResponse {
    repeated RegisteredEntry registeredEntryList = 1;
}


message ListBySpiffeIDRequest {
    string spiffeId = 1;
}

message ListBySpiffeIDResponse {
    repeated RegisteredEntry registeredEntryList = 1;
}


message CreateFederatedBundleRequest {
    FederatedBundle federatedBundle = 1;
}

message CreateFederatedBundleResponse {
}


message ListFederatedBundlesRequest {
}

message ListFederatedBundlesResponse {
    repeated FederatedBundle federatedBundleList = 1;
}


message UpdateFederatedBundleRequest {
    FederatedBundle federatedBundle = 1;
}

message UpdateFederatedBundleResponse {
}


message DeleteFederatedBundleRequest {
    string federateBundleSpiffeId  = 1;
}

message DeleteFederatedBundleResponse {
}


service registration {
    rpc CreateEntry(CreateEntryRequest) returns (CreateEntryResponse);
    rpc DeleteEntry(DeleteEntryRequest) returns (DeleteEntryResponse);

    rpc ListByAttestor(ListByAttestorRequest) returns (ListByAttestorResponse);
    rpc ListBySelector(ListBySelectorRequest) returns (ListBySelectorResponse);
    rpc ListBySpiffeID(ListBySpiffeIDRequest) returns (ListBySpiffeIDResponse);

    rpc CreateFederatedBundle(CreateFederatedBundleRequest) returns (CreateFederatedBundleResponse);
    rpc ListFederatedBundles(ListFederatedBundlesRequest) returns (ListFederatedBundlesResponse);
    rpc UpdateFederatedBundle(UpdateFederatedBundleRequest) returns (UpdateFederatedBundleResponse);
    rpc DeleteFederatedBundle(DeleteFederatedBundleRequest) returns (DeleteFederatedBundleResponse);
}
