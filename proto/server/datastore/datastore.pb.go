// Code generated by protoc-gen-go. DO NOT EDIT.
// source: datastore.proto

package datastore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import common "github.com/spiffe/spire/proto/common"
import plugin "github.com/spiffe/spire/proto/common/plugin"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DoubleValue from public import google/protobuf/wrappers.proto
type DoubleValue = wrappers.DoubleValue

// FloatValue from public import google/protobuf/wrappers.proto
type FloatValue = wrappers.FloatValue

// Int64Value from public import google/protobuf/wrappers.proto
type Int64Value = wrappers.Int64Value

// UInt64Value from public import google/protobuf/wrappers.proto
type UInt64Value = wrappers.UInt64Value

// Int32Value from public import google/protobuf/wrappers.proto
type Int32Value = wrappers.Int32Value

// UInt32Value from public import google/protobuf/wrappers.proto
type UInt32Value = wrappers.UInt32Value

// BoolValue from public import google/protobuf/wrappers.proto
type BoolValue = wrappers.BoolValue

// StringValue from public import google/protobuf/wrappers.proto
type StringValue = wrappers.StringValue

// BytesValue from public import google/protobuf/wrappers.proto
type BytesValue = wrappers.BytesValue

// ConfigureRequest from public import github.com/spiffe/spire/proto/common/plugin/plugin.proto
type ConfigureRequest = plugin.ConfigureRequest

// ConfigureResponse from public import github.com/spiffe/spire/proto/common/plugin/plugin.proto
type ConfigureResponse = plugin.ConfigureResponse

// GetPluginInfoRequest from public import github.com/spiffe/spire/proto/common/plugin/plugin.proto
type GetPluginInfoRequest = plugin.GetPluginInfoRequest

// GetPluginInfoResponse from public import github.com/spiffe/spire/proto/common/plugin/plugin.proto
type GetPluginInfoResponse = plugin.GetPluginInfoResponse

// Empty from public import github.com/spiffe/spire/proto/common/common.proto
type Empty = common.Empty

// AttestationData from public import github.com/spiffe/spire/proto/common/common.proto
type AttestationData = common.AttestationData

// Selector from public import github.com/spiffe/spire/proto/common/common.proto
type Selector = common.Selector

// Selectors from public import github.com/spiffe/spire/proto/common/common.proto
type Selectors = common.Selectors

// RegistrationEntry from public import github.com/spiffe/spire/proto/common/common.proto
type RegistrationEntry = common.RegistrationEntry

// RegistrationEntries from public import github.com/spiffe/spire/proto/common/common.proto
type RegistrationEntries = common.RegistrationEntries

type Bundle struct {
	// Trust domain SPIFFE ID
	TrustDomain string `protobuf:"bytes,1,opt,name=trust_domain,json=trustDomain" json:"trust_domain,omitempty"`
	// CA Certificates (ASN.1 DER encoded)
	CaCerts              []byte   `protobuf:"bytes,2,opt,name=ca_certs,json=caCerts,proto3" json:"ca_certs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}
func (*Bundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{0}
}
func (m *Bundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle.Unmarshal(m, b)
}
func (m *Bundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle.Marshal(b, m, deterministic)
}
func (dst *Bundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle.Merge(dst, src)
}
func (m *Bundle) XXX_Size() int {
	return xxx_messageInfo_Bundle.Size(m)
}
func (m *Bundle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle proto.InternalMessageInfo

func (m *Bundle) GetTrustDomain() string {
	if m != nil {
		return m.TrustDomain
	}
	return ""
}

func (m *Bundle) GetCaCerts() []byte {
	if m != nil {
		return m.CaCerts
	}
	return nil
}

type CreateBundleRequest struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBundleRequest) Reset()         { *m = CreateBundleRequest{} }
func (m *CreateBundleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBundleRequest) ProtoMessage()    {}
func (*CreateBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{1}
}
func (m *CreateBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBundleRequest.Unmarshal(m, b)
}
func (m *CreateBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBundleRequest.Marshal(b, m, deterministic)
}
func (dst *CreateBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBundleRequest.Merge(dst, src)
}
func (m *CreateBundleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBundleRequest.Size(m)
}
func (m *CreateBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBundleRequest proto.InternalMessageInfo

func (m *CreateBundleRequest) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type CreateBundleResponse struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBundleResponse) Reset()         { *m = CreateBundleResponse{} }
func (m *CreateBundleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBundleResponse) ProtoMessage()    {}
func (*CreateBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{2}
}
func (m *CreateBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBundleResponse.Unmarshal(m, b)
}
func (m *CreateBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBundleResponse.Marshal(b, m, deterministic)
}
func (dst *CreateBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBundleResponse.Merge(dst, src)
}
func (m *CreateBundleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBundleResponse.Size(m)
}
func (m *CreateBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBundleResponse proto.InternalMessageInfo

func (m *CreateBundleResponse) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type FetchBundleRequest struct {
	TrustDomain          string   `protobuf:"bytes,1,opt,name=trust_domain,json=trustDomain" json:"trust_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchBundleRequest) Reset()         { *m = FetchBundleRequest{} }
func (m *FetchBundleRequest) String() string { return proto.CompactTextString(m) }
func (*FetchBundleRequest) ProtoMessage()    {}
func (*FetchBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{3}
}
func (m *FetchBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchBundleRequest.Unmarshal(m, b)
}
func (m *FetchBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchBundleRequest.Marshal(b, m, deterministic)
}
func (dst *FetchBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchBundleRequest.Merge(dst, src)
}
func (m *FetchBundleRequest) XXX_Size() int {
	return xxx_messageInfo_FetchBundleRequest.Size(m)
}
func (m *FetchBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchBundleRequest proto.InternalMessageInfo

func (m *FetchBundleRequest) GetTrustDomain() string {
	if m != nil {
		return m.TrustDomain
	}
	return ""
}

type FetchBundleResponse struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchBundleResponse) Reset()         { *m = FetchBundleResponse{} }
func (m *FetchBundleResponse) String() string { return proto.CompactTextString(m) }
func (*FetchBundleResponse) ProtoMessage()    {}
func (*FetchBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{4}
}
func (m *FetchBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchBundleResponse.Unmarshal(m, b)
}
func (m *FetchBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchBundleResponse.Marshal(b, m, deterministic)
}
func (dst *FetchBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchBundleResponse.Merge(dst, src)
}
func (m *FetchBundleResponse) XXX_Size() int {
	return xxx_messageInfo_FetchBundleResponse.Size(m)
}
func (m *FetchBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchBundleResponse proto.InternalMessageInfo

func (m *FetchBundleResponse) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type ListBundlesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBundlesRequest) Reset()         { *m = ListBundlesRequest{} }
func (m *ListBundlesRequest) String() string { return proto.CompactTextString(m) }
func (*ListBundlesRequest) ProtoMessage()    {}
func (*ListBundlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{5}
}
func (m *ListBundlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBundlesRequest.Unmarshal(m, b)
}
func (m *ListBundlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBundlesRequest.Marshal(b, m, deterministic)
}
func (dst *ListBundlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBundlesRequest.Merge(dst, src)
}
func (m *ListBundlesRequest) XXX_Size() int {
	return xxx_messageInfo_ListBundlesRequest.Size(m)
}
func (m *ListBundlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBundlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBundlesRequest proto.InternalMessageInfo

type ListBundlesResponse struct {
	Bundles              []*Bundle `protobuf:"bytes,1,rep,name=bundles" json:"bundles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListBundlesResponse) Reset()         { *m = ListBundlesResponse{} }
func (m *ListBundlesResponse) String() string { return proto.CompactTextString(m) }
func (*ListBundlesResponse) ProtoMessage()    {}
func (*ListBundlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{6}
}
func (m *ListBundlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBundlesResponse.Unmarshal(m, b)
}
func (m *ListBundlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBundlesResponse.Marshal(b, m, deterministic)
}
func (dst *ListBundlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBundlesResponse.Merge(dst, src)
}
func (m *ListBundlesResponse) XXX_Size() int {
	return xxx_messageInfo_ListBundlesResponse.Size(m)
}
func (m *ListBundlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBundlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBundlesResponse proto.InternalMessageInfo

func (m *ListBundlesResponse) GetBundles() []*Bundle {
	if m != nil {
		return m.Bundles
	}
	return nil
}

type UpdateBundleRequest struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBundleRequest) Reset()         { *m = UpdateBundleRequest{} }
func (m *UpdateBundleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBundleRequest) ProtoMessage()    {}
func (*UpdateBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{7}
}
func (m *UpdateBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBundleRequest.Unmarshal(m, b)
}
func (m *UpdateBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBundleRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBundleRequest.Merge(dst, src)
}
func (m *UpdateBundleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBundleRequest.Size(m)
}
func (m *UpdateBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBundleRequest proto.InternalMessageInfo

func (m *UpdateBundleRequest) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type UpdateBundleResponse struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBundleResponse) Reset()         { *m = UpdateBundleResponse{} }
func (m *UpdateBundleResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBundleResponse) ProtoMessage()    {}
func (*UpdateBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{8}
}
func (m *UpdateBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBundleResponse.Unmarshal(m, b)
}
func (m *UpdateBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBundleResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBundleResponse.Merge(dst, src)
}
func (m *UpdateBundleResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateBundleResponse.Size(m)
}
func (m *UpdateBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBundleResponse proto.InternalMessageInfo

func (m *UpdateBundleResponse) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type AppendBundleRequest struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendBundleRequest) Reset()         { *m = AppendBundleRequest{} }
func (m *AppendBundleRequest) String() string { return proto.CompactTextString(m) }
func (*AppendBundleRequest) ProtoMessage()    {}
func (*AppendBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{9}
}
func (m *AppendBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendBundleRequest.Unmarshal(m, b)
}
func (m *AppendBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendBundleRequest.Marshal(b, m, deterministic)
}
func (dst *AppendBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendBundleRequest.Merge(dst, src)
}
func (m *AppendBundleRequest) XXX_Size() int {
	return xxx_messageInfo_AppendBundleRequest.Size(m)
}
func (m *AppendBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendBundleRequest proto.InternalMessageInfo

func (m *AppendBundleRequest) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type AppendBundleResponse struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendBundleResponse) Reset()         { *m = AppendBundleResponse{} }
func (m *AppendBundleResponse) String() string { return proto.CompactTextString(m) }
func (*AppendBundleResponse) ProtoMessage()    {}
func (*AppendBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{10}
}
func (m *AppendBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendBundleResponse.Unmarshal(m, b)
}
func (m *AppendBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendBundleResponse.Marshal(b, m, deterministic)
}
func (dst *AppendBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendBundleResponse.Merge(dst, src)
}
func (m *AppendBundleResponse) XXX_Size() int {
	return xxx_messageInfo_AppendBundleResponse.Size(m)
}
func (m *AppendBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendBundleResponse proto.InternalMessageInfo

func (m *AppendBundleResponse) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type DeleteBundleRequest struct {
	TrustDomain          string   `protobuf:"bytes,1,opt,name=trust_domain,json=trustDomain" json:"trust_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBundleRequest) Reset()         { *m = DeleteBundleRequest{} }
func (m *DeleteBundleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBundleRequest) ProtoMessage()    {}
func (*DeleteBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{11}
}
func (m *DeleteBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBundleRequest.Unmarshal(m, b)
}
func (m *DeleteBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBundleRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBundleRequest.Merge(dst, src)
}
func (m *DeleteBundleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBundleRequest.Size(m)
}
func (m *DeleteBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBundleRequest proto.InternalMessageInfo

func (m *DeleteBundleRequest) GetTrustDomain() string {
	if m != nil {
		return m.TrustDomain
	}
	return ""
}

type DeleteBundleResponse struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBundleResponse) Reset()         { *m = DeleteBundleResponse{} }
func (m *DeleteBundleResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteBundleResponse) ProtoMessage()    {}
func (*DeleteBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{12}
}
func (m *DeleteBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBundleResponse.Unmarshal(m, b)
}
func (m *DeleteBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBundleResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBundleResponse.Merge(dst, src)
}
func (m *DeleteBundleResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteBundleResponse.Size(m)
}
func (m *DeleteBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBundleResponse proto.InternalMessageInfo

func (m *DeleteBundleResponse) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type NodeResolverMapEntry struct {
	// Node SPIFFE ID
	SpiffeId string `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId" json:"spiffe_id,omitempty"`
	// Node selector
	Selector             *common.Selector `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NodeResolverMapEntry) Reset()         { *m = NodeResolverMapEntry{} }
func (m *NodeResolverMapEntry) String() string { return proto.CompactTextString(m) }
func (*NodeResolverMapEntry) ProtoMessage()    {}
func (*NodeResolverMapEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{13}
}
func (m *NodeResolverMapEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeResolverMapEntry.Unmarshal(m, b)
}
func (m *NodeResolverMapEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeResolverMapEntry.Marshal(b, m, deterministic)
}
func (dst *NodeResolverMapEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeResolverMapEntry.Merge(dst, src)
}
func (m *NodeResolverMapEntry) XXX_Size() int {
	return xxx_messageInfo_NodeResolverMapEntry.Size(m)
}
func (m *NodeResolverMapEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeResolverMapEntry.DiscardUnknown(m)
}

var xxx_messageInfo_NodeResolverMapEntry proto.InternalMessageInfo

func (m *NodeResolverMapEntry) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

func (m *NodeResolverMapEntry) GetSelector() *common.Selector {
	if m != nil {
		return m.Selector
	}
	return nil
}

type CreateNodeResolverMapEntryRequest struct {
	Entry                *NodeResolverMapEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateNodeResolverMapEntryRequest) Reset()         { *m = CreateNodeResolverMapEntryRequest{} }
func (m *CreateNodeResolverMapEntryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNodeResolverMapEntryRequest) ProtoMessage()    {}
func (*CreateNodeResolverMapEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{14}
}
func (m *CreateNodeResolverMapEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeResolverMapEntryRequest.Unmarshal(m, b)
}
func (m *CreateNodeResolverMapEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeResolverMapEntryRequest.Marshal(b, m, deterministic)
}
func (dst *CreateNodeResolverMapEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeResolverMapEntryRequest.Merge(dst, src)
}
func (m *CreateNodeResolverMapEntryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNodeResolverMapEntryRequest.Size(m)
}
func (m *CreateNodeResolverMapEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeResolverMapEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeResolverMapEntryRequest proto.InternalMessageInfo

func (m *CreateNodeResolverMapEntryRequest) GetEntry() *NodeResolverMapEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type CreateNodeResolverMapEntryResponse struct {
	Entry                *NodeResolverMapEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateNodeResolverMapEntryResponse) Reset()         { *m = CreateNodeResolverMapEntryResponse{} }
func (m *CreateNodeResolverMapEntryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNodeResolverMapEntryResponse) ProtoMessage()    {}
func (*CreateNodeResolverMapEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{15}
}
func (m *CreateNodeResolverMapEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeResolverMapEntryResponse.Unmarshal(m, b)
}
func (m *CreateNodeResolverMapEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeResolverMapEntryResponse.Marshal(b, m, deterministic)
}
func (dst *CreateNodeResolverMapEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeResolverMapEntryResponse.Merge(dst, src)
}
func (m *CreateNodeResolverMapEntryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNodeResolverMapEntryResponse.Size(m)
}
func (m *CreateNodeResolverMapEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeResolverMapEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeResolverMapEntryResponse proto.InternalMessageInfo

func (m *CreateNodeResolverMapEntryResponse) GetEntry() *NodeResolverMapEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type ListNodeResolverMapEntriesRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId" json:"spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodeResolverMapEntriesRequest) Reset()         { *m = ListNodeResolverMapEntriesRequest{} }
func (m *ListNodeResolverMapEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodeResolverMapEntriesRequest) ProtoMessage()    {}
func (*ListNodeResolverMapEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{16}
}
func (m *ListNodeResolverMapEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeResolverMapEntriesRequest.Unmarshal(m, b)
}
func (m *ListNodeResolverMapEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeResolverMapEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *ListNodeResolverMapEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeResolverMapEntriesRequest.Merge(dst, src)
}
func (m *ListNodeResolverMapEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodeResolverMapEntriesRequest.Size(m)
}
func (m *ListNodeResolverMapEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeResolverMapEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeResolverMapEntriesRequest proto.InternalMessageInfo

func (m *ListNodeResolverMapEntriesRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

type ListNodeResolverMapEntriesResponse struct {
	Entries              []*NodeResolverMapEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListNodeResolverMapEntriesResponse) Reset()         { *m = ListNodeResolverMapEntriesResponse{} }
func (m *ListNodeResolverMapEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodeResolverMapEntriesResponse) ProtoMessage()    {}
func (*ListNodeResolverMapEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{17}
}
func (m *ListNodeResolverMapEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeResolverMapEntriesResponse.Unmarshal(m, b)
}
func (m *ListNodeResolverMapEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeResolverMapEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *ListNodeResolverMapEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeResolverMapEntriesResponse.Merge(dst, src)
}
func (m *ListNodeResolverMapEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodeResolverMapEntriesResponse.Size(m)
}
func (m *ListNodeResolverMapEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeResolverMapEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeResolverMapEntriesResponse proto.InternalMessageInfo

func (m *ListNodeResolverMapEntriesResponse) GetEntries() []*NodeResolverMapEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type DeleteNodeResolverMapEntryRequest struct {
	Entry                *NodeResolverMapEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeleteNodeResolverMapEntryRequest) Reset()         { *m = DeleteNodeResolverMapEntryRequest{} }
func (m *DeleteNodeResolverMapEntryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeResolverMapEntryRequest) ProtoMessage()    {}
func (*DeleteNodeResolverMapEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{18}
}
func (m *DeleteNodeResolverMapEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeResolverMapEntryRequest.Unmarshal(m, b)
}
func (m *DeleteNodeResolverMapEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeResolverMapEntryRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteNodeResolverMapEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeResolverMapEntryRequest.Merge(dst, src)
}
func (m *DeleteNodeResolverMapEntryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeResolverMapEntryRequest.Size(m)
}
func (m *DeleteNodeResolverMapEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeResolverMapEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeResolverMapEntryRequest proto.InternalMessageInfo

func (m *DeleteNodeResolverMapEntryRequest) GetEntry() *NodeResolverMapEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type DeleteNodeResolverMapEntryResponse struct {
	Entries              []*NodeResolverMapEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DeleteNodeResolverMapEntryResponse) Reset()         { *m = DeleteNodeResolverMapEntryResponse{} }
func (m *DeleteNodeResolverMapEntryResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeResolverMapEntryResponse) ProtoMessage()    {}
func (*DeleteNodeResolverMapEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{19}
}
func (m *DeleteNodeResolverMapEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeResolverMapEntryResponse.Unmarshal(m, b)
}
func (m *DeleteNodeResolverMapEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeResolverMapEntryResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteNodeResolverMapEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeResolverMapEntryResponse.Merge(dst, src)
}
func (m *DeleteNodeResolverMapEntryResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeResolverMapEntryResponse.Size(m)
}
func (m *DeleteNodeResolverMapEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeResolverMapEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeResolverMapEntryResponse proto.InternalMessageInfo

func (m *DeleteNodeResolverMapEntryResponse) GetEntries() []*NodeResolverMapEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RectifyNodeResolverMapEntriesRequest struct {
	Entries              []*NodeResolverMapEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RectifyNodeResolverMapEntriesRequest) Reset()         { *m = RectifyNodeResolverMapEntriesRequest{} }
func (m *RectifyNodeResolverMapEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*RectifyNodeResolverMapEntriesRequest) ProtoMessage()    {}
func (*RectifyNodeResolverMapEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{20}
}
func (m *RectifyNodeResolverMapEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RectifyNodeResolverMapEntriesRequest.Unmarshal(m, b)
}
func (m *RectifyNodeResolverMapEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RectifyNodeResolverMapEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *RectifyNodeResolverMapEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RectifyNodeResolverMapEntriesRequest.Merge(dst, src)
}
func (m *RectifyNodeResolverMapEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_RectifyNodeResolverMapEntriesRequest.Size(m)
}
func (m *RectifyNodeResolverMapEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RectifyNodeResolverMapEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RectifyNodeResolverMapEntriesRequest proto.InternalMessageInfo

func (m *RectifyNodeResolverMapEntriesRequest) GetEntries() []*NodeResolverMapEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RectifyNodeResolverMapEntriesResponse struct {
	Entries              []*NodeResolverMapEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RectifyNodeResolverMapEntriesResponse) Reset()         { *m = RectifyNodeResolverMapEntriesResponse{} }
func (m *RectifyNodeResolverMapEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*RectifyNodeResolverMapEntriesResponse) ProtoMessage()    {}
func (*RectifyNodeResolverMapEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{21}
}
func (m *RectifyNodeResolverMapEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RectifyNodeResolverMapEntriesResponse.Unmarshal(m, b)
}
func (m *RectifyNodeResolverMapEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RectifyNodeResolverMapEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *RectifyNodeResolverMapEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RectifyNodeResolverMapEntriesResponse.Merge(dst, src)
}
func (m *RectifyNodeResolverMapEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_RectifyNodeResolverMapEntriesResponse.Size(m)
}
func (m *RectifyNodeResolverMapEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RectifyNodeResolverMapEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RectifyNodeResolverMapEntriesResponse proto.InternalMessageInfo

func (m *RectifyNodeResolverMapEntriesResponse) GetEntries() []*NodeResolverMapEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AttestedNodeEntry struct {
	// Node SPIFFE ID
	SpiffeId string `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId" json:"spiffe_id,omitempty"`
	// Attestation data type
	AttestationDataType string `protobuf:"bytes,2,opt,name=attestation_data_type,json=attestationDataType" json:"attestation_data_type,omitempty"`
	// Node certificate serial number
	CertSerialNumber string `protobuf:"bytes,3,opt,name=cert_serial_number,json=certSerialNumber" json:"cert_serial_number,omitempty"`
	// Node certificate not_after (seconds since unix epoch)
	CertNotAfter         int64    `protobuf:"varint,4,opt,name=cert_not_after,json=certNotAfter" json:"cert_not_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestedNodeEntry) Reset()         { *m = AttestedNodeEntry{} }
func (m *AttestedNodeEntry) String() string { return proto.CompactTextString(m) }
func (*AttestedNodeEntry) ProtoMessage()    {}
func (*AttestedNodeEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{22}
}
func (m *AttestedNodeEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestedNodeEntry.Unmarshal(m, b)
}
func (m *AttestedNodeEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestedNodeEntry.Marshal(b, m, deterministic)
}
func (dst *AttestedNodeEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestedNodeEntry.Merge(dst, src)
}
func (m *AttestedNodeEntry) XXX_Size() int {
	return xxx_messageInfo_AttestedNodeEntry.Size(m)
}
func (m *AttestedNodeEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestedNodeEntry.DiscardUnknown(m)
}

var xxx_messageInfo_AttestedNodeEntry proto.InternalMessageInfo

func (m *AttestedNodeEntry) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

func (m *AttestedNodeEntry) GetAttestationDataType() string {
	if m != nil {
		return m.AttestationDataType
	}
	return ""
}

func (m *AttestedNodeEntry) GetCertSerialNumber() string {
	if m != nil {
		return m.CertSerialNumber
	}
	return ""
}

func (m *AttestedNodeEntry) GetCertNotAfter() int64 {
	if m != nil {
		return m.CertNotAfter
	}
	return 0
}

type CreateAttestedNodeEntryRequest struct {
	Entry                *AttestedNodeEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateAttestedNodeEntryRequest) Reset()         { *m = CreateAttestedNodeEntryRequest{} }
func (m *CreateAttestedNodeEntryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAttestedNodeEntryRequest) ProtoMessage()    {}
func (*CreateAttestedNodeEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{23}
}
func (m *CreateAttestedNodeEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAttestedNodeEntryRequest.Unmarshal(m, b)
}
func (m *CreateAttestedNodeEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAttestedNodeEntryRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAttestedNodeEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAttestedNodeEntryRequest.Merge(dst, src)
}
func (m *CreateAttestedNodeEntryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAttestedNodeEntryRequest.Size(m)
}
func (m *CreateAttestedNodeEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAttestedNodeEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAttestedNodeEntryRequest proto.InternalMessageInfo

func (m *CreateAttestedNodeEntryRequest) GetEntry() *AttestedNodeEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type CreateAttestedNodeEntryResponse struct {
	Entry                *AttestedNodeEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateAttestedNodeEntryResponse) Reset()         { *m = CreateAttestedNodeEntryResponse{} }
func (m *CreateAttestedNodeEntryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAttestedNodeEntryResponse) ProtoMessage()    {}
func (*CreateAttestedNodeEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{24}
}
func (m *CreateAttestedNodeEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAttestedNodeEntryResponse.Unmarshal(m, b)
}
func (m *CreateAttestedNodeEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAttestedNodeEntryResponse.Marshal(b, m, deterministic)
}
func (dst *CreateAttestedNodeEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAttestedNodeEntryResponse.Merge(dst, src)
}
func (m *CreateAttestedNodeEntryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAttestedNodeEntryResponse.Size(m)
}
func (m *CreateAttestedNodeEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAttestedNodeEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAttestedNodeEntryResponse proto.InternalMessageInfo

func (m *CreateAttestedNodeEntryResponse) GetEntry() *AttestedNodeEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type FetchAttestedNodeEntryRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId" json:"spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchAttestedNodeEntryRequest) Reset()         { *m = FetchAttestedNodeEntryRequest{} }
func (m *FetchAttestedNodeEntryRequest) String() string { return proto.CompactTextString(m) }
func (*FetchAttestedNodeEntryRequest) ProtoMessage()    {}
func (*FetchAttestedNodeEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{25}
}
func (m *FetchAttestedNodeEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAttestedNodeEntryRequest.Unmarshal(m, b)
}
func (m *FetchAttestedNodeEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAttestedNodeEntryRequest.Marshal(b, m, deterministic)
}
func (dst *FetchAttestedNodeEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAttestedNodeEntryRequest.Merge(dst, src)
}
func (m *FetchAttestedNodeEntryRequest) XXX_Size() int {
	return xxx_messageInfo_FetchAttestedNodeEntryRequest.Size(m)
}
func (m *FetchAttestedNodeEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAttestedNodeEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAttestedNodeEntryRequest proto.InternalMessageInfo

func (m *FetchAttestedNodeEntryRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

type FetchAttestedNodeEntryResponse struct {
	Entry                *AttestedNodeEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FetchAttestedNodeEntryResponse) Reset()         { *m = FetchAttestedNodeEntryResponse{} }
func (m *FetchAttestedNodeEntryResponse) String() string { return proto.CompactTextString(m) }
func (*FetchAttestedNodeEntryResponse) ProtoMessage()    {}
func (*FetchAttestedNodeEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{26}
}
func (m *FetchAttestedNodeEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAttestedNodeEntryResponse.Unmarshal(m, b)
}
func (m *FetchAttestedNodeEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAttestedNodeEntryResponse.Marshal(b, m, deterministic)
}
func (dst *FetchAttestedNodeEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAttestedNodeEntryResponse.Merge(dst, src)
}
func (m *FetchAttestedNodeEntryResponse) XXX_Size() int {
	return xxx_messageInfo_FetchAttestedNodeEntryResponse.Size(m)
}
func (m *FetchAttestedNodeEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAttestedNodeEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAttestedNodeEntryResponse proto.InternalMessageInfo

func (m *FetchAttestedNodeEntryResponse) GetEntry() *AttestedNodeEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type ListAttestedNodeEntriesRequest struct {
	ByExpiresBefore      *wrappers.Int64Value `protobuf:"bytes,1,opt,name=by_expires_before,json=byExpiresBefore" json:"by_expires_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListAttestedNodeEntriesRequest) Reset()         { *m = ListAttestedNodeEntriesRequest{} }
func (m *ListAttestedNodeEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListAttestedNodeEntriesRequest) ProtoMessage()    {}
func (*ListAttestedNodeEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{27}
}
func (m *ListAttestedNodeEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAttestedNodeEntriesRequest.Unmarshal(m, b)
}
func (m *ListAttestedNodeEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAttestedNodeEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *ListAttestedNodeEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAttestedNodeEntriesRequest.Merge(dst, src)
}
func (m *ListAttestedNodeEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListAttestedNodeEntriesRequest.Size(m)
}
func (m *ListAttestedNodeEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAttestedNodeEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAttestedNodeEntriesRequest proto.InternalMessageInfo

func (m *ListAttestedNodeEntriesRequest) GetByExpiresBefore() *wrappers.Int64Value {
	if m != nil {
		return m.ByExpiresBefore
	}
	return nil
}

type ListAttestedNodeEntriesResponse struct {
	Entries              []*AttestedNodeEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListAttestedNodeEntriesResponse) Reset()         { *m = ListAttestedNodeEntriesResponse{} }
func (m *ListAttestedNodeEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListAttestedNodeEntriesResponse) ProtoMessage()    {}
func (*ListAttestedNodeEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{28}
}
func (m *ListAttestedNodeEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAttestedNodeEntriesResponse.Unmarshal(m, b)
}
func (m *ListAttestedNodeEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAttestedNodeEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *ListAttestedNodeEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAttestedNodeEntriesResponse.Merge(dst, src)
}
func (m *ListAttestedNodeEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListAttestedNodeEntriesResponse.Size(m)
}
func (m *ListAttestedNodeEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAttestedNodeEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAttestedNodeEntriesResponse proto.InternalMessageInfo

func (m *ListAttestedNodeEntriesResponse) GetEntries() []*AttestedNodeEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type UpdateAttestedNodeEntryRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId" json:"spiffe_id,omitempty"`
	CertSerialNumber     string   `protobuf:"bytes,2,opt,name=cert_serial_number,json=certSerialNumber" json:"cert_serial_number,omitempty"`
	CertNotAfter         int64    `protobuf:"varint,3,opt,name=cert_not_after,json=certNotAfter" json:"cert_not_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAttestedNodeEntryRequest) Reset()         { *m = UpdateAttestedNodeEntryRequest{} }
func (m *UpdateAttestedNodeEntryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAttestedNodeEntryRequest) ProtoMessage()    {}
func (*UpdateAttestedNodeEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{29}
}
func (m *UpdateAttestedNodeEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAttestedNodeEntryRequest.Unmarshal(m, b)
}
func (m *UpdateAttestedNodeEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAttestedNodeEntryRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateAttestedNodeEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAttestedNodeEntryRequest.Merge(dst, src)
}
func (m *UpdateAttestedNodeEntryRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAttestedNodeEntryRequest.Size(m)
}
func (m *UpdateAttestedNodeEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAttestedNodeEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAttestedNodeEntryRequest proto.InternalMessageInfo

func (m *UpdateAttestedNodeEntryRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

func (m *UpdateAttestedNodeEntryRequest) GetCertSerialNumber() string {
	if m != nil {
		return m.CertSerialNumber
	}
	return ""
}

func (m *UpdateAttestedNodeEntryRequest) GetCertNotAfter() int64 {
	if m != nil {
		return m.CertNotAfter
	}
	return 0
}

type UpdateAttestedNodeEntryResponse struct {
	Entry                *AttestedNodeEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateAttestedNodeEntryResponse) Reset()         { *m = UpdateAttestedNodeEntryResponse{} }
func (m *UpdateAttestedNodeEntryResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAttestedNodeEntryResponse) ProtoMessage()    {}
func (*UpdateAttestedNodeEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{30}
}
func (m *UpdateAttestedNodeEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAttestedNodeEntryResponse.Unmarshal(m, b)
}
func (m *UpdateAttestedNodeEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAttestedNodeEntryResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateAttestedNodeEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAttestedNodeEntryResponse.Merge(dst, src)
}
func (m *UpdateAttestedNodeEntryResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAttestedNodeEntryResponse.Size(m)
}
func (m *UpdateAttestedNodeEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAttestedNodeEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAttestedNodeEntryResponse proto.InternalMessageInfo

func (m *UpdateAttestedNodeEntryResponse) GetEntry() *AttestedNodeEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type DeleteAttestedNodeEntryRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId" json:"spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAttestedNodeEntryRequest) Reset()         { *m = DeleteAttestedNodeEntryRequest{} }
func (m *DeleteAttestedNodeEntryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAttestedNodeEntryRequest) ProtoMessage()    {}
func (*DeleteAttestedNodeEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{31}
}
func (m *DeleteAttestedNodeEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAttestedNodeEntryRequest.Unmarshal(m, b)
}
func (m *DeleteAttestedNodeEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAttestedNodeEntryRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAttestedNodeEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAttestedNodeEntryRequest.Merge(dst, src)
}
func (m *DeleteAttestedNodeEntryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAttestedNodeEntryRequest.Size(m)
}
func (m *DeleteAttestedNodeEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAttestedNodeEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAttestedNodeEntryRequest proto.InternalMessageInfo

func (m *DeleteAttestedNodeEntryRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

type DeleteAttestedNodeEntryResponse struct {
	Entry                *AttestedNodeEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeleteAttestedNodeEntryResponse) Reset()         { *m = DeleteAttestedNodeEntryResponse{} }
func (m *DeleteAttestedNodeEntryResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAttestedNodeEntryResponse) ProtoMessage()    {}
func (*DeleteAttestedNodeEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{32}
}
func (m *DeleteAttestedNodeEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAttestedNodeEntryResponse.Unmarshal(m, b)
}
func (m *DeleteAttestedNodeEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAttestedNodeEntryResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteAttestedNodeEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAttestedNodeEntryResponse.Merge(dst, src)
}
func (m *DeleteAttestedNodeEntryResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAttestedNodeEntryResponse.Size(m)
}
func (m *DeleteAttestedNodeEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAttestedNodeEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAttestedNodeEntryResponse proto.InternalMessageInfo

func (m *DeleteAttestedNodeEntryResponse) GetEntry() *AttestedNodeEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type CreateRegistrationEntryRequest struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateRegistrationEntryRequest) Reset()         { *m = CreateRegistrationEntryRequest{} }
func (m *CreateRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRegistrationEntryRequest) ProtoMessage()    {}
func (*CreateRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{33}
}
func (m *CreateRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *CreateRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRegistrationEntryRequest.Merge(dst, src)
}
func (m *CreateRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRegistrationEntryRequest.Size(m)
}
func (m *CreateRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRegistrationEntryRequest proto.InternalMessageInfo

func (m *CreateRegistrationEntryRequest) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type CreateRegistrationEntryResponse struct {
	EntryId              string   `protobuf:"bytes,1,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRegistrationEntryResponse) Reset()         { *m = CreateRegistrationEntryResponse{} }
func (m *CreateRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRegistrationEntryResponse) ProtoMessage()    {}
func (*CreateRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{34}
}
func (m *CreateRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *CreateRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *CreateRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRegistrationEntryResponse.Merge(dst, src)
}
func (m *CreateRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRegistrationEntryResponse.Size(m)
}
func (m *CreateRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRegistrationEntryResponse proto.InternalMessageInfo

func (m *CreateRegistrationEntryResponse) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

type FetchRegistrationEntryRequest struct {
	EntryId              string   `protobuf:"bytes,1,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRegistrationEntryRequest) Reset()         { *m = FetchRegistrationEntryRequest{} }
func (m *FetchRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRegistrationEntryRequest) ProtoMessage()    {}
func (*FetchRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{35}
}
func (m *FetchRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *FetchRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *FetchRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRegistrationEntryRequest.Merge(dst, src)
}
func (m *FetchRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRegistrationEntryRequest.Size(m)
}
func (m *FetchRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRegistrationEntryRequest proto.InternalMessageInfo

func (m *FetchRegistrationEntryRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

type FetchRegistrationEntryResponse struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FetchRegistrationEntryResponse) Reset()         { *m = FetchRegistrationEntryResponse{} }
func (m *FetchRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*FetchRegistrationEntryResponse) ProtoMessage()    {}
func (*FetchRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{36}
}
func (m *FetchRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *FetchRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *FetchRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRegistrationEntryResponse.Merge(dst, src)
}
func (m *FetchRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_FetchRegistrationEntryResponse.Size(m)
}
func (m *FetchRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRegistrationEntryResponse proto.InternalMessageInfo

func (m *FetchRegistrationEntryResponse) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type BySelectors struct {
	Selectors            []*common.Selector `protobuf:"bytes,1,rep,name=selectors" json:"selectors,omitempty"`
	AllowAnyCombination  bool               `protobuf:"varint,2,opt,name=allow_any_combination,json=allowAnyCombination" json:"allow_any_combination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BySelectors) Reset()         { *m = BySelectors{} }
func (m *BySelectors) String() string { return proto.CompactTextString(m) }
func (*BySelectors) ProtoMessage()    {}
func (*BySelectors) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{37}
}
func (m *BySelectors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BySelectors.Unmarshal(m, b)
}
func (m *BySelectors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BySelectors.Marshal(b, m, deterministic)
}
func (dst *BySelectors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BySelectors.Merge(dst, src)
}
func (m *BySelectors) XXX_Size() int {
	return xxx_messageInfo_BySelectors.Size(m)
}
func (m *BySelectors) XXX_DiscardUnknown() {
	xxx_messageInfo_BySelectors.DiscardUnknown(m)
}

var xxx_messageInfo_BySelectors proto.InternalMessageInfo

func (m *BySelectors) GetSelectors() []*common.Selector {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *BySelectors) GetAllowAnyCombination() bool {
	if m != nil {
		return m.AllowAnyCombination
	}
	return false
}

type ListRegistrationEntriesRequest struct {
	ByParentId           *wrappers.StringValue `protobuf:"bytes,1,opt,name=by_parent_id,json=byParentId" json:"by_parent_id,omitempty"`
	BySelectors          *BySelectors          `protobuf:"bytes,2,opt,name=by_selectors,json=bySelectors" json:"by_selectors,omitempty"`
	BySpiffeId           *wrappers.StringValue `protobuf:"bytes,3,opt,name=by_spiffe_id,json=bySpiffeId" json:"by_spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListRegistrationEntriesRequest) Reset()         { *m = ListRegistrationEntriesRequest{} }
func (m *ListRegistrationEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRegistrationEntriesRequest) ProtoMessage()    {}
func (*ListRegistrationEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{38}
}
func (m *ListRegistrationEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistrationEntriesRequest.Unmarshal(m, b)
}
func (m *ListRegistrationEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistrationEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *ListRegistrationEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistrationEntriesRequest.Merge(dst, src)
}
func (m *ListRegistrationEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRegistrationEntriesRequest.Size(m)
}
func (m *ListRegistrationEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistrationEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistrationEntriesRequest proto.InternalMessageInfo

func (m *ListRegistrationEntriesRequest) GetByParentId() *wrappers.StringValue {
	if m != nil {
		return m.ByParentId
	}
	return nil
}

func (m *ListRegistrationEntriesRequest) GetBySelectors() *BySelectors {
	if m != nil {
		return m.BySelectors
	}
	return nil
}

func (m *ListRegistrationEntriesRequest) GetBySpiffeId() *wrappers.StringValue {
	if m != nil {
		return m.BySpiffeId
	}
	return nil
}

type ListRegistrationEntriesResponse struct {
	Entries              []*common.RegistrationEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListRegistrationEntriesResponse) Reset()         { *m = ListRegistrationEntriesResponse{} }
func (m *ListRegistrationEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRegistrationEntriesResponse) ProtoMessage()    {}
func (*ListRegistrationEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{39}
}
func (m *ListRegistrationEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistrationEntriesResponse.Unmarshal(m, b)
}
func (m *ListRegistrationEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistrationEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *ListRegistrationEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistrationEntriesResponse.Merge(dst, src)
}
func (m *ListRegistrationEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRegistrationEntriesResponse.Size(m)
}
func (m *ListRegistrationEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistrationEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistrationEntriesResponse proto.InternalMessageInfo

func (m *ListRegistrationEntriesResponse) GetEntries() []*common.RegistrationEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type UpdateRegistrationEntryRequest struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateRegistrationEntryRequest) Reset()         { *m = UpdateRegistrationEntryRequest{} }
func (m *UpdateRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRegistrationEntryRequest) ProtoMessage()    {}
func (*UpdateRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{40}
}
func (m *UpdateRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *UpdateRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRegistrationEntryRequest.Merge(dst, src)
}
func (m *UpdateRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRegistrationEntryRequest.Size(m)
}
func (m *UpdateRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRegistrationEntryRequest proto.InternalMessageInfo

func (m *UpdateRegistrationEntryRequest) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type UpdateRegistrationEntryResponse struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateRegistrationEntryResponse) Reset()         { *m = UpdateRegistrationEntryResponse{} }
func (m *UpdateRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRegistrationEntryResponse) ProtoMessage()    {}
func (*UpdateRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{41}
}
func (m *UpdateRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *UpdateRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRegistrationEntryResponse.Merge(dst, src)
}
func (m *UpdateRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRegistrationEntryResponse.Size(m)
}
func (m *UpdateRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRegistrationEntryResponse proto.InternalMessageInfo

func (m *UpdateRegistrationEntryResponse) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type DeleteRegistrationEntryRequest struct {
	EntryId              string   `protobuf:"bytes,1,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRegistrationEntryRequest) Reset()         { *m = DeleteRegistrationEntryRequest{} }
func (m *DeleteRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistrationEntryRequest) ProtoMessage()    {}
func (*DeleteRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{42}
}
func (m *DeleteRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *DeleteRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistrationEntryRequest.Merge(dst, src)
}
func (m *DeleteRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistrationEntryRequest.Size(m)
}
func (m *DeleteRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistrationEntryRequest proto.InternalMessageInfo

func (m *DeleteRegistrationEntryRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

type DeleteRegistrationEntryResponse struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteRegistrationEntryResponse) Reset()         { *m = DeleteRegistrationEntryResponse{} }
func (m *DeleteRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistrationEntryResponse) ProtoMessage()    {}
func (*DeleteRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{43}
}
func (m *DeleteRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *DeleteRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistrationEntryResponse.Merge(dst, src)
}
func (m *DeleteRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistrationEntryResponse.Size(m)
}
func (m *DeleteRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistrationEntryResponse proto.InternalMessageInfo

func (m *DeleteRegistrationEntryResponse) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type JoinToken struct {
	// Token value
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	// Expiration in seconds since unix epoch
	Expiry               int64    `protobuf:"varint,2,opt,name=expiry" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinToken) Reset()         { *m = JoinToken{} }
func (m *JoinToken) String() string { return proto.CompactTextString(m) }
func (*JoinToken) ProtoMessage()    {}
func (*JoinToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{44}
}
func (m *JoinToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinToken.Unmarshal(m, b)
}
func (m *JoinToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinToken.Marshal(b, m, deterministic)
}
func (dst *JoinToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinToken.Merge(dst, src)
}
func (m *JoinToken) XXX_Size() int {
	return xxx_messageInfo_JoinToken.Size(m)
}
func (m *JoinToken) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinToken.DiscardUnknown(m)
}

var xxx_messageInfo_JoinToken proto.InternalMessageInfo

func (m *JoinToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *JoinToken) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type CreateJoinTokenRequest struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateJoinTokenRequest) Reset()         { *m = CreateJoinTokenRequest{} }
func (m *CreateJoinTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateJoinTokenRequest) ProtoMessage()    {}
func (*CreateJoinTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{45}
}
func (m *CreateJoinTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJoinTokenRequest.Unmarshal(m, b)
}
func (m *CreateJoinTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJoinTokenRequest.Marshal(b, m, deterministic)
}
func (dst *CreateJoinTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJoinTokenRequest.Merge(dst, src)
}
func (m *CreateJoinTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateJoinTokenRequest.Size(m)
}
func (m *CreateJoinTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJoinTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJoinTokenRequest proto.InternalMessageInfo

func (m *CreateJoinTokenRequest) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type CreateJoinTokenResponse struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateJoinTokenResponse) Reset()         { *m = CreateJoinTokenResponse{} }
func (m *CreateJoinTokenResponse) String() string { return proto.CompactTextString(m) }
func (*CreateJoinTokenResponse) ProtoMessage()    {}
func (*CreateJoinTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{46}
}
func (m *CreateJoinTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJoinTokenResponse.Unmarshal(m, b)
}
func (m *CreateJoinTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJoinTokenResponse.Marshal(b, m, deterministic)
}
func (dst *CreateJoinTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJoinTokenResponse.Merge(dst, src)
}
func (m *CreateJoinTokenResponse) XXX_Size() int {
	return xxx_messageInfo_CreateJoinTokenResponse.Size(m)
}
func (m *CreateJoinTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJoinTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJoinTokenResponse proto.InternalMessageInfo

func (m *CreateJoinTokenResponse) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type FetchJoinTokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchJoinTokenRequest) Reset()         { *m = FetchJoinTokenRequest{} }
func (m *FetchJoinTokenRequest) String() string { return proto.CompactTextString(m) }
func (*FetchJoinTokenRequest) ProtoMessage()    {}
func (*FetchJoinTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{47}
}
func (m *FetchJoinTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchJoinTokenRequest.Unmarshal(m, b)
}
func (m *FetchJoinTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchJoinTokenRequest.Marshal(b, m, deterministic)
}
func (dst *FetchJoinTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchJoinTokenRequest.Merge(dst, src)
}
func (m *FetchJoinTokenRequest) XXX_Size() int {
	return xxx_messageInfo_FetchJoinTokenRequest.Size(m)
}
func (m *FetchJoinTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchJoinTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchJoinTokenRequest proto.InternalMessageInfo

func (m *FetchJoinTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type FetchJoinTokenResponse struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FetchJoinTokenResponse) Reset()         { *m = FetchJoinTokenResponse{} }
func (m *FetchJoinTokenResponse) String() string { return proto.CompactTextString(m) }
func (*FetchJoinTokenResponse) ProtoMessage()    {}
func (*FetchJoinTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{48}
}
func (m *FetchJoinTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchJoinTokenResponse.Unmarshal(m, b)
}
func (m *FetchJoinTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchJoinTokenResponse.Marshal(b, m, deterministic)
}
func (dst *FetchJoinTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchJoinTokenResponse.Merge(dst, src)
}
func (m *FetchJoinTokenResponse) XXX_Size() int {
	return xxx_messageInfo_FetchJoinTokenResponse.Size(m)
}
func (m *FetchJoinTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchJoinTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchJoinTokenResponse proto.InternalMessageInfo

func (m *FetchJoinTokenResponse) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type DeleteJoinTokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteJoinTokenRequest) Reset()         { *m = DeleteJoinTokenRequest{} }
func (m *DeleteJoinTokenRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteJoinTokenRequest) ProtoMessage()    {}
func (*DeleteJoinTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{49}
}
func (m *DeleteJoinTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJoinTokenRequest.Unmarshal(m, b)
}
func (m *DeleteJoinTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJoinTokenRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteJoinTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJoinTokenRequest.Merge(dst, src)
}
func (m *DeleteJoinTokenRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteJoinTokenRequest.Size(m)
}
func (m *DeleteJoinTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJoinTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJoinTokenRequest proto.InternalMessageInfo

func (m *DeleteJoinTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type DeleteJoinTokenResponse struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteJoinTokenResponse) Reset()         { *m = DeleteJoinTokenResponse{} }
func (m *DeleteJoinTokenResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteJoinTokenResponse) ProtoMessage()    {}
func (*DeleteJoinTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{50}
}
func (m *DeleteJoinTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJoinTokenResponse.Unmarshal(m, b)
}
func (m *DeleteJoinTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJoinTokenResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteJoinTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJoinTokenResponse.Merge(dst, src)
}
func (m *DeleteJoinTokenResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteJoinTokenResponse.Size(m)
}
func (m *DeleteJoinTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJoinTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJoinTokenResponse proto.InternalMessageInfo

func (m *DeleteJoinTokenResponse) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type PruneJoinTokensRequest struct {
	ExpiresBefore        int64    `protobuf:"varint,1,opt,name=expires_before,json=expiresBefore" json:"expires_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PruneJoinTokensRequest) Reset()         { *m = PruneJoinTokensRequest{} }
func (m *PruneJoinTokensRequest) String() string { return proto.CompactTextString(m) }
func (*PruneJoinTokensRequest) ProtoMessage()    {}
func (*PruneJoinTokensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{51}
}
func (m *PruneJoinTokensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PruneJoinTokensRequest.Unmarshal(m, b)
}
func (m *PruneJoinTokensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PruneJoinTokensRequest.Marshal(b, m, deterministic)
}
func (dst *PruneJoinTokensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PruneJoinTokensRequest.Merge(dst, src)
}
func (m *PruneJoinTokensRequest) XXX_Size() int {
	return xxx_messageInfo_PruneJoinTokensRequest.Size(m)
}
func (m *PruneJoinTokensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PruneJoinTokensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PruneJoinTokensRequest proto.InternalMessageInfo

func (m *PruneJoinTokensRequest) GetExpiresBefore() int64 {
	if m != nil {
		return m.ExpiresBefore
	}
	return 0
}

type PruneJoinTokensResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PruneJoinTokensResponse) Reset()         { *m = PruneJoinTokensResponse{} }
func (m *PruneJoinTokensResponse) String() string { return proto.CompactTextString(m) }
func (*PruneJoinTokensResponse) ProtoMessage()    {}
func (*PruneJoinTokensResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_e3e0d519b06ed1bf, []int{52}
}
func (m *PruneJoinTokensResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PruneJoinTokensResponse.Unmarshal(m, b)
}
func (m *PruneJoinTokensResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PruneJoinTokensResponse.Marshal(b, m, deterministic)
}
func (dst *PruneJoinTokensResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PruneJoinTokensResponse.Merge(dst, src)
}
func (m *PruneJoinTokensResponse) XXX_Size() int {
	return xxx_messageInfo_PruneJoinTokensResponse.Size(m)
}
func (m *PruneJoinTokensResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PruneJoinTokensResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PruneJoinTokensResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Bundle)(nil), "spire.server.datastore.Bundle")
	proto.RegisterType((*CreateBundleRequest)(nil), "spire.server.datastore.CreateBundleRequest")
	proto.RegisterType((*CreateBundleResponse)(nil), "spire.server.datastore.CreateBundleResponse")
	proto.RegisterType((*FetchBundleRequest)(nil), "spire.server.datastore.FetchBundleRequest")
	proto.RegisterType((*FetchBundleResponse)(nil), "spire.server.datastore.FetchBundleResponse")
	proto.RegisterType((*ListBundlesRequest)(nil), "spire.server.datastore.ListBundlesRequest")
	proto.RegisterType((*ListBundlesResponse)(nil), "spire.server.datastore.ListBundlesResponse")
	proto.RegisterType((*UpdateBundleRequest)(nil), "spire.server.datastore.UpdateBundleRequest")
	proto.RegisterType((*UpdateBundleResponse)(nil), "spire.server.datastore.UpdateBundleResponse")
	proto.RegisterType((*AppendBundleRequest)(nil), "spire.server.datastore.AppendBundleRequest")
	proto.RegisterType((*AppendBundleResponse)(nil), "spire.server.datastore.AppendBundleResponse")
	proto.RegisterType((*DeleteBundleRequest)(nil), "spire.server.datastore.DeleteBundleRequest")
	proto.RegisterType((*DeleteBundleResponse)(nil), "spire.server.datastore.DeleteBundleResponse")
	proto.RegisterType((*NodeResolverMapEntry)(nil), "spire.server.datastore.NodeResolverMapEntry")
	proto.RegisterType((*CreateNodeResolverMapEntryRequest)(nil), "spire.server.datastore.CreateNodeResolverMapEntryRequest")
	proto.RegisterType((*CreateNodeResolverMapEntryResponse)(nil), "spire.server.datastore.CreateNodeResolverMapEntryResponse")
	proto.RegisterType((*ListNodeResolverMapEntriesRequest)(nil), "spire.server.datastore.ListNodeResolverMapEntriesRequest")
	proto.RegisterType((*ListNodeResolverMapEntriesResponse)(nil), "spire.server.datastore.ListNodeResolverMapEntriesResponse")
	proto.RegisterType((*DeleteNodeResolverMapEntryRequest)(nil), "spire.server.datastore.DeleteNodeResolverMapEntryRequest")
	proto.RegisterType((*DeleteNodeResolverMapEntryResponse)(nil), "spire.server.datastore.DeleteNodeResolverMapEntryResponse")
	proto.RegisterType((*RectifyNodeResolverMapEntriesRequest)(nil), "spire.server.datastore.RectifyNodeResolverMapEntriesRequest")
	proto.RegisterType((*RectifyNodeResolverMapEntriesResponse)(nil), "spire.server.datastore.RectifyNodeResolverMapEntriesResponse")
	proto.RegisterType((*AttestedNodeEntry)(nil), "spire.server.datastore.AttestedNodeEntry")
	proto.RegisterType((*CreateAttestedNodeEntryRequest)(nil), "spire.server.datastore.CreateAttestedNodeEntryRequest")
	proto.RegisterType((*CreateAttestedNodeEntryResponse)(nil), "spire.server.datastore.CreateAttestedNodeEntryResponse")
	proto.RegisterType((*FetchAttestedNodeEntryRequest)(nil), "spire.server.datastore.FetchAttestedNodeEntryRequest")
	proto.RegisterType((*FetchAttestedNodeEntryResponse)(nil), "spire.server.datastore.FetchAttestedNodeEntryResponse")
	proto.RegisterType((*ListAttestedNodeEntriesRequest)(nil), "spire.server.datastore.ListAttestedNodeEntriesRequest")
	proto.RegisterType((*ListAttestedNodeEntriesResponse)(nil), "spire.server.datastore.ListAttestedNodeEntriesResponse")
	proto.RegisterType((*UpdateAttestedNodeEntryRequest)(nil), "spire.server.datastore.UpdateAttestedNodeEntryRequest")
	proto.RegisterType((*UpdateAttestedNodeEntryResponse)(nil), "spire.server.datastore.UpdateAttestedNodeEntryResponse")
	proto.RegisterType((*DeleteAttestedNodeEntryRequest)(nil), "spire.server.datastore.DeleteAttestedNodeEntryRequest")
	proto.RegisterType((*DeleteAttestedNodeEntryResponse)(nil), "spire.server.datastore.DeleteAttestedNodeEntryResponse")
	proto.RegisterType((*CreateRegistrationEntryRequest)(nil), "spire.server.datastore.CreateRegistrationEntryRequest")
	proto.RegisterType((*CreateRegistrationEntryResponse)(nil), "spire.server.datastore.CreateRegistrationEntryResponse")
	proto.RegisterType((*FetchRegistrationEntryRequest)(nil), "spire.server.datastore.FetchRegistrationEntryRequest")
	proto.RegisterType((*FetchRegistrationEntryResponse)(nil), "spire.server.datastore.FetchRegistrationEntryResponse")
	proto.RegisterType((*BySelectors)(nil), "spire.server.datastore.BySelectors")
	proto.RegisterType((*ListRegistrationEntriesRequest)(nil), "spire.server.datastore.ListRegistrationEntriesRequest")
	proto.RegisterType((*ListRegistrationEntriesResponse)(nil), "spire.server.datastore.ListRegistrationEntriesResponse")
	proto.RegisterType((*UpdateRegistrationEntryRequest)(nil), "spire.server.datastore.UpdateRegistrationEntryRequest")
	proto.RegisterType((*UpdateRegistrationEntryResponse)(nil), "spire.server.datastore.UpdateRegistrationEntryResponse")
	proto.RegisterType((*DeleteRegistrationEntryRequest)(nil), "spire.server.datastore.DeleteRegistrationEntryRequest")
	proto.RegisterType((*DeleteRegistrationEntryResponse)(nil), "spire.server.datastore.DeleteRegistrationEntryResponse")
	proto.RegisterType((*JoinToken)(nil), "spire.server.datastore.JoinToken")
	proto.RegisterType((*CreateJoinTokenRequest)(nil), "spire.server.datastore.CreateJoinTokenRequest")
	proto.RegisterType((*CreateJoinTokenResponse)(nil), "spire.server.datastore.CreateJoinTokenResponse")
	proto.RegisterType((*FetchJoinTokenRequest)(nil), "spire.server.datastore.FetchJoinTokenRequest")
	proto.RegisterType((*FetchJoinTokenResponse)(nil), "spire.server.datastore.FetchJoinTokenResponse")
	proto.RegisterType((*DeleteJoinTokenRequest)(nil), "spire.server.datastore.DeleteJoinTokenRequest")
	proto.RegisterType((*DeleteJoinTokenResponse)(nil), "spire.server.datastore.DeleteJoinTokenResponse")
	proto.RegisterType((*PruneJoinTokensRequest)(nil), "spire.server.datastore.PruneJoinTokensRequest")
	proto.RegisterType((*PruneJoinTokensResponse)(nil), "spire.server.datastore.PruneJoinTokensResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DataStore service

type DataStoreClient interface {
	// Creates a bundle
	CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (*CreateBundleResponse, error)
	// Fetches a specific bundle
	FetchBundle(ctx context.Context, in *FetchBundleRequest, opts ...grpc.CallOption) (*FetchBundleResponse, error)
	// Lists bundles (optionally filtered)
	ListBundles(ctx context.Context, in *ListBundlesRequest, opts ...grpc.CallOption) (*ListBundlesResponse, error)
	// Updates a specific bundle, overwriting existing certs
	UpdateBundle(ctx context.Context, in *UpdateBundleRequest, opts ...grpc.CallOption) (*UpdateBundleResponse, error)
	// Appends the provided certs onto an existing bundle, creating a new bundle if one doesn't exist
	AppendBundle(ctx context.Context, in *AppendBundleRequest, opts ...grpc.CallOption) (*AppendBundleResponse, error)
	// Deletes a specific bundle
	DeleteBundle(ctx context.Context, in *DeleteBundleRequest, opts ...grpc.CallOption) (*DeleteBundleResponse, error)
	// Creates an attested node entry
	CreateAttestedNodeEntry(ctx context.Context, in *CreateAttestedNodeEntryRequest, opts ...grpc.CallOption) (*CreateAttestedNodeEntryResponse, error)
	// Fetches a specific attested node entry
	FetchAttestedNodeEntry(ctx context.Context, in *FetchAttestedNodeEntryRequest, opts ...grpc.CallOption) (*FetchAttestedNodeEntryResponse, error)
	// Lists attested node entries (optionally filtered)
	ListAttestedNodeEntries(ctx context.Context, in *ListAttestedNodeEntriesRequest, opts ...grpc.CallOption) (*ListAttestedNodeEntriesResponse, error)
	// Updates a specific attested node entry
	UpdateAttestedNodeEntry(ctx context.Context, in *UpdateAttestedNodeEntryRequest, opts ...grpc.CallOption) (*UpdateAttestedNodeEntryResponse, error)
	// Deletes a specific attested node entry
	DeleteAttestedNodeEntry(ctx context.Context, in *DeleteAttestedNodeEntryRequest, opts ...grpc.CallOption) (*DeleteAttestedNodeEntryResponse, error)
	// Creates a node resolver map entry
	CreateNodeResolverMapEntry(ctx context.Context, in *CreateNodeResolverMapEntryRequest, opts ...grpc.CallOption) (*CreateNodeResolverMapEntryResponse, error)
	// Lists node resolver map entries for a specified SPIFFE ID
	ListNodeResolverMapEntries(ctx context.Context, in *ListNodeResolverMapEntriesRequest, opts ...grpc.CallOption) (*ListNodeResolverMapEntriesResponse, error)
	// Deletes a specific node resolver map entry
	DeleteNodeResolverMapEntry(ctx context.Context, in *DeleteNodeResolverMapEntryRequest, opts ...grpc.CallOption) (*DeleteNodeResolverMapEntryResponse, error)
	// Sets the list of node resolver map entries for the specified SPIFFE ID
	RectifyNodeResolverMapEntries(ctx context.Context, in *RectifyNodeResolverMapEntriesRequest, opts ...grpc.CallOption) (*RectifyNodeResolverMapEntriesResponse, error)
	// Creates a registration entry
	CreateRegistrationEntry(ctx context.Context, in *CreateRegistrationEntryRequest, opts ...grpc.CallOption) (*CreateRegistrationEntryResponse, error)
	// Fetches a specific registration entry
	FetchRegistrationEntry(ctx context.Context, in *FetchRegistrationEntryRequest, opts ...grpc.CallOption) (*FetchRegistrationEntryResponse, error)
	// Lists registration entries (optionally filtered)
	ListRegistrationEntries(ctx context.Context, in *ListRegistrationEntriesRequest, opts ...grpc.CallOption) (*ListRegistrationEntriesResponse, error)
	// Updates a specific registration entry
	UpdateRegistrationEntry(ctx context.Context, in *UpdateRegistrationEntryRequest, opts ...grpc.CallOption) (*UpdateRegistrationEntryResponse, error)
	// Deletes a specific registration entry
	DeleteRegistrationEntry(ctx context.Context, in *DeleteRegistrationEntryRequest, opts ...grpc.CallOption) (*DeleteRegistrationEntryResponse, error)
	// Creates a join token
	CreateJoinToken(ctx context.Context, in *CreateJoinTokenRequest, opts ...grpc.CallOption) (*CreateJoinTokenResponse, error)
	// Fetches a specific join token
	FetchJoinToken(ctx context.Context, in *FetchJoinTokenRequest, opts ...grpc.CallOption) (*FetchJoinTokenResponse, error)
	// Delete a specific join token
	DeleteJoinToken(ctx context.Context, in *DeleteJoinTokenRequest, opts ...grpc.CallOption) (*DeleteJoinTokenResponse, error)
	// Prunes all join tokens that expire before the specified timestamp
	PruneJoinTokens(ctx context.Context, in *PruneJoinTokensRequest, opts ...grpc.CallOption) (*PruneJoinTokensResponse, error)
	// Applies the plugin configuration
	Configure(ctx context.Context, in *plugin.ConfigureRequest, opts ...grpc.CallOption) (*plugin.ConfigureResponse, error)
	// Returns the version and related metadata of the installed plugin
	GetPluginInfo(ctx context.Context, in *plugin.GetPluginInfoRequest, opts ...grpc.CallOption) (*plugin.GetPluginInfoResponse, error)
}

type dataStoreClient struct {
	cc *grpc.ClientConn
}

func NewDataStoreClient(cc *grpc.ClientConn) DataStoreClient {
	return &dataStoreClient{cc}
}

func (c *dataStoreClient) CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (*CreateBundleResponse, error) {
	out := new(CreateBundleResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateBundle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchBundle(ctx context.Context, in *FetchBundleRequest, opts ...grpc.CallOption) (*FetchBundleResponse, error) {
	out := new(FetchBundleResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchBundle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) ListBundles(ctx context.Context, in *ListBundlesRequest, opts ...grpc.CallOption) (*ListBundlesResponse, error) {
	out := new(ListBundlesResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/ListBundles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) UpdateBundle(ctx context.Context, in *UpdateBundleRequest, opts ...grpc.CallOption) (*UpdateBundleResponse, error) {
	out := new(UpdateBundleResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/UpdateBundle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) AppendBundle(ctx context.Context, in *AppendBundleRequest, opts ...grpc.CallOption) (*AppendBundleResponse, error) {
	out := new(AppendBundleResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/AppendBundle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteBundle(ctx context.Context, in *DeleteBundleRequest, opts ...grpc.CallOption) (*DeleteBundleResponse, error) {
	out := new(DeleteBundleResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteBundle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) CreateAttestedNodeEntry(ctx context.Context, in *CreateAttestedNodeEntryRequest, opts ...grpc.CallOption) (*CreateAttestedNodeEntryResponse, error) {
	out := new(CreateAttestedNodeEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateAttestedNodeEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchAttestedNodeEntry(ctx context.Context, in *FetchAttestedNodeEntryRequest, opts ...grpc.CallOption) (*FetchAttestedNodeEntryResponse, error) {
	out := new(FetchAttestedNodeEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchAttestedNodeEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) ListAttestedNodeEntries(ctx context.Context, in *ListAttestedNodeEntriesRequest, opts ...grpc.CallOption) (*ListAttestedNodeEntriesResponse, error) {
	out := new(ListAttestedNodeEntriesResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/ListAttestedNodeEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) UpdateAttestedNodeEntry(ctx context.Context, in *UpdateAttestedNodeEntryRequest, opts ...grpc.CallOption) (*UpdateAttestedNodeEntryResponse, error) {
	out := new(UpdateAttestedNodeEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/UpdateAttestedNodeEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteAttestedNodeEntry(ctx context.Context, in *DeleteAttestedNodeEntryRequest, opts ...grpc.CallOption) (*DeleteAttestedNodeEntryResponse, error) {
	out := new(DeleteAttestedNodeEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteAttestedNodeEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) CreateNodeResolverMapEntry(ctx context.Context, in *CreateNodeResolverMapEntryRequest, opts ...grpc.CallOption) (*CreateNodeResolverMapEntryResponse, error) {
	out := new(CreateNodeResolverMapEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateNodeResolverMapEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) ListNodeResolverMapEntries(ctx context.Context, in *ListNodeResolverMapEntriesRequest, opts ...grpc.CallOption) (*ListNodeResolverMapEntriesResponse, error) {
	out := new(ListNodeResolverMapEntriesResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/ListNodeResolverMapEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteNodeResolverMapEntry(ctx context.Context, in *DeleteNodeResolverMapEntryRequest, opts ...grpc.CallOption) (*DeleteNodeResolverMapEntryResponse, error) {
	out := new(DeleteNodeResolverMapEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteNodeResolverMapEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) RectifyNodeResolverMapEntries(ctx context.Context, in *RectifyNodeResolverMapEntriesRequest, opts ...grpc.CallOption) (*RectifyNodeResolverMapEntriesResponse, error) {
	out := new(RectifyNodeResolverMapEntriesResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/RectifyNodeResolverMapEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) CreateRegistrationEntry(ctx context.Context, in *CreateRegistrationEntryRequest, opts ...grpc.CallOption) (*CreateRegistrationEntryResponse, error) {
	out := new(CreateRegistrationEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateRegistrationEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchRegistrationEntry(ctx context.Context, in *FetchRegistrationEntryRequest, opts ...grpc.CallOption) (*FetchRegistrationEntryResponse, error) {
	out := new(FetchRegistrationEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchRegistrationEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) ListRegistrationEntries(ctx context.Context, in *ListRegistrationEntriesRequest, opts ...grpc.CallOption) (*ListRegistrationEntriesResponse, error) {
	out := new(ListRegistrationEntriesResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/ListRegistrationEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) UpdateRegistrationEntry(ctx context.Context, in *UpdateRegistrationEntryRequest, opts ...grpc.CallOption) (*UpdateRegistrationEntryResponse, error) {
	out := new(UpdateRegistrationEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/UpdateRegistrationEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteRegistrationEntry(ctx context.Context, in *DeleteRegistrationEntryRequest, opts ...grpc.CallOption) (*DeleteRegistrationEntryResponse, error) {
	out := new(DeleteRegistrationEntryResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteRegistrationEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) CreateJoinToken(ctx context.Context, in *CreateJoinTokenRequest, opts ...grpc.CallOption) (*CreateJoinTokenResponse, error) {
	out := new(CreateJoinTokenResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateJoinToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchJoinToken(ctx context.Context, in *FetchJoinTokenRequest, opts ...grpc.CallOption) (*FetchJoinTokenResponse, error) {
	out := new(FetchJoinTokenResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchJoinToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteJoinToken(ctx context.Context, in *DeleteJoinTokenRequest, opts ...grpc.CallOption) (*DeleteJoinTokenResponse, error) {
	out := new(DeleteJoinTokenResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteJoinToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) PruneJoinTokens(ctx context.Context, in *PruneJoinTokensRequest, opts ...grpc.CallOption) (*PruneJoinTokensResponse, error) {
	out := new(PruneJoinTokensResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/PruneJoinTokens", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) Configure(ctx context.Context, in *plugin.ConfigureRequest, opts ...grpc.CallOption) (*plugin.ConfigureResponse, error) {
	out := new(plugin.ConfigureResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/Configure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) GetPluginInfo(ctx context.Context, in *plugin.GetPluginInfoRequest, opts ...grpc.CallOption) (*plugin.GetPluginInfoResponse, error) {
	out := new(plugin.GetPluginInfoResponse)
	err := grpc.Invoke(ctx, "/spire.server.datastore.DataStore/GetPluginInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataStore service

type DataStoreServer interface {
	// Creates a bundle
	CreateBundle(context.Context, *CreateBundleRequest) (*CreateBundleResponse, error)
	// Fetches a specific bundle
	FetchBundle(context.Context, *FetchBundleRequest) (*FetchBundleResponse, error)
	// Lists bundles (optionally filtered)
	ListBundles(context.Context, *ListBundlesRequest) (*ListBundlesResponse, error)
	// Updates a specific bundle, overwriting existing certs
	UpdateBundle(context.Context, *UpdateBundleRequest) (*UpdateBundleResponse, error)
	// Appends the provided certs onto an existing bundle, creating a new bundle if one doesn't exist
	AppendBundle(context.Context, *AppendBundleRequest) (*AppendBundleResponse, error)
	// Deletes a specific bundle
	DeleteBundle(context.Context, *DeleteBundleRequest) (*DeleteBundleResponse, error)
	// Creates an attested node entry
	CreateAttestedNodeEntry(context.Context, *CreateAttestedNodeEntryRequest) (*CreateAttestedNodeEntryResponse, error)
	// Fetches a specific attested node entry
	FetchAttestedNodeEntry(context.Context, *FetchAttestedNodeEntryRequest) (*FetchAttestedNodeEntryResponse, error)
	// Lists attested node entries (optionally filtered)
	ListAttestedNodeEntries(context.Context, *ListAttestedNodeEntriesRequest) (*ListAttestedNodeEntriesResponse, error)
	// Updates a specific attested node entry
	UpdateAttestedNodeEntry(context.Context, *UpdateAttestedNodeEntryRequest) (*UpdateAttestedNodeEntryResponse, error)
	// Deletes a specific attested node entry
	DeleteAttestedNodeEntry(context.Context, *DeleteAttestedNodeEntryRequest) (*DeleteAttestedNodeEntryResponse, error)
	// Creates a node resolver map entry
	CreateNodeResolverMapEntry(context.Context, *CreateNodeResolverMapEntryRequest) (*CreateNodeResolverMapEntryResponse, error)
	// Lists node resolver map entries for a specified SPIFFE ID
	ListNodeResolverMapEntries(context.Context, *ListNodeResolverMapEntriesRequest) (*ListNodeResolverMapEntriesResponse, error)
	// Deletes a specific node resolver map entry
	DeleteNodeResolverMapEntry(context.Context, *DeleteNodeResolverMapEntryRequest) (*DeleteNodeResolverMapEntryResponse, error)
	// Sets the list of node resolver map entries for the specified SPIFFE ID
	RectifyNodeResolverMapEntries(context.Context, *RectifyNodeResolverMapEntriesRequest) (*RectifyNodeResolverMapEntriesResponse, error)
	// Creates a registration entry
	CreateRegistrationEntry(context.Context, *CreateRegistrationEntryRequest) (*CreateRegistrationEntryResponse, error)
	// Fetches a specific registration entry
	FetchRegistrationEntry(context.Context, *FetchRegistrationEntryRequest) (*FetchRegistrationEntryResponse, error)
	// Lists registration entries (optionally filtered)
	ListRegistrationEntries(context.Context, *ListRegistrationEntriesRequest) (*ListRegistrationEntriesResponse, error)
	// Updates a specific registration entry
	UpdateRegistrationEntry(context.Context, *UpdateRegistrationEntryRequest) (*UpdateRegistrationEntryResponse, error)
	// Deletes a specific registration entry
	DeleteRegistrationEntry(context.Context, *DeleteRegistrationEntryRequest) (*DeleteRegistrationEntryResponse, error)
	// Creates a join token
	CreateJoinToken(context.Context, *CreateJoinTokenRequest) (*CreateJoinTokenResponse, error)
	// Fetches a specific join token
	FetchJoinToken(context.Context, *FetchJoinTokenRequest) (*FetchJoinTokenResponse, error)
	// Delete a specific join token
	DeleteJoinToken(context.Context, *DeleteJoinTokenRequest) (*DeleteJoinTokenResponse, error)
	// Prunes all join tokens that expire before the specified timestamp
	PruneJoinTokens(context.Context, *PruneJoinTokensRequest) (*PruneJoinTokensResponse, error)
	// Applies the plugin configuration
	Configure(context.Context, *plugin.ConfigureRequest) (*plugin.ConfigureResponse, error)
	// Returns the version and related metadata of the installed plugin
	GetPluginInfo(context.Context, *plugin.GetPluginInfoRequest) (*plugin.GetPluginInfoResponse, error)
}

func RegisterDataStoreServer(s *grpc.Server, srv DataStoreServer) {
	s.RegisterService(&_DataStore_serviceDesc, srv)
}

func _DataStore_CreateBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateBundle(ctx, req.(*CreateBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchBundle(ctx, req.(*FetchBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_ListBundles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBundlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).ListBundles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/ListBundles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).ListBundles(ctx, req.(*ListBundlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_UpdateBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).UpdateBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/UpdateBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).UpdateBundle(ctx, req.(*UpdateBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_AppendBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).AppendBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/AppendBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).AppendBundle(ctx, req.(*AppendBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteBundle(ctx, req.(*DeleteBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_CreateAttestedNodeEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAttestedNodeEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateAttestedNodeEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateAttestedNodeEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateAttestedNodeEntry(ctx, req.(*CreateAttestedNodeEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchAttestedNodeEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchAttestedNodeEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchAttestedNodeEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchAttestedNodeEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchAttestedNodeEntry(ctx, req.(*FetchAttestedNodeEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_ListAttestedNodeEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAttestedNodeEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).ListAttestedNodeEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/ListAttestedNodeEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).ListAttestedNodeEntries(ctx, req.(*ListAttestedNodeEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_UpdateAttestedNodeEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAttestedNodeEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).UpdateAttestedNodeEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/UpdateAttestedNodeEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).UpdateAttestedNodeEntry(ctx, req.(*UpdateAttestedNodeEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteAttestedNodeEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAttestedNodeEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteAttestedNodeEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteAttestedNodeEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteAttestedNodeEntry(ctx, req.(*DeleteAttestedNodeEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_CreateNodeResolverMapEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodeResolverMapEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateNodeResolverMapEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateNodeResolverMapEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateNodeResolverMapEntry(ctx, req.(*CreateNodeResolverMapEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_ListNodeResolverMapEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodeResolverMapEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).ListNodeResolverMapEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/ListNodeResolverMapEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).ListNodeResolverMapEntries(ctx, req.(*ListNodeResolverMapEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteNodeResolverMapEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeResolverMapEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteNodeResolverMapEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteNodeResolverMapEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteNodeResolverMapEntry(ctx, req.(*DeleteNodeResolverMapEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_RectifyNodeResolverMapEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RectifyNodeResolverMapEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).RectifyNodeResolverMapEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/RectifyNodeResolverMapEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).RectifyNodeResolverMapEntries(ctx, req.(*RectifyNodeResolverMapEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_CreateRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateRegistrationEntry(ctx, req.(*CreateRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchRegistrationEntry(ctx, req.(*FetchRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_ListRegistrationEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRegistrationEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).ListRegistrationEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/ListRegistrationEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).ListRegistrationEntries(ctx, req.(*ListRegistrationEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_UpdateRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).UpdateRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/UpdateRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).UpdateRegistrationEntry(ctx, req.(*UpdateRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteRegistrationEntry(ctx, req.(*DeleteRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_CreateJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateJoinToken(ctx, req.(*CreateJoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchJoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchJoinToken(ctx, req.(*FetchJoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteJoinToken(ctx, req.(*DeleteJoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_PruneJoinTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PruneJoinTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).PruneJoinTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/PruneJoinTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).PruneJoinTokens(ctx, req.(*PruneJoinTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(plugin.ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).Configure(ctx, req.(*plugin.ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_GetPluginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(plugin.GetPluginInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).GetPluginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/GetPluginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).GetPluginInfo(ctx, req.(*plugin.GetPluginInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spire.server.datastore.DataStore",
	HandlerType: (*DataStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBundle",
			Handler:    _DataStore_CreateBundle_Handler,
		},
		{
			MethodName: "FetchBundle",
			Handler:    _DataStore_FetchBundle_Handler,
		},
		{
			MethodName: "ListBundles",
			Handler:    _DataStore_ListBundles_Handler,
		},
		{
			MethodName: "UpdateBundle",
			Handler:    _DataStore_UpdateBundle_Handler,
		},
		{
			MethodName: "AppendBundle",
			Handler:    _DataStore_AppendBundle_Handler,
		},
		{
			MethodName: "DeleteBundle",
			Handler:    _DataStore_DeleteBundle_Handler,
		},
		{
			MethodName: "CreateAttestedNodeEntry",
			Handler:    _DataStore_CreateAttestedNodeEntry_Handler,
		},
		{
			MethodName: "FetchAttestedNodeEntry",
			Handler:    _DataStore_FetchAttestedNodeEntry_Handler,
		},
		{
			MethodName: "ListAttestedNodeEntries",
			Handler:    _DataStore_ListAttestedNodeEntries_Handler,
		},
		{
			MethodName: "UpdateAttestedNodeEntry",
			Handler:    _DataStore_UpdateAttestedNodeEntry_Handler,
		},
		{
			MethodName: "DeleteAttestedNodeEntry",
			Handler:    _DataStore_DeleteAttestedNodeEntry_Handler,
		},
		{
			MethodName: "CreateNodeResolverMapEntry",
			Handler:    _DataStore_CreateNodeResolverMapEntry_Handler,
		},
		{
			MethodName: "ListNodeResolverMapEntries",
			Handler:    _DataStore_ListNodeResolverMapEntries_Handler,
		},
		{
			MethodName: "DeleteNodeResolverMapEntry",
			Handler:    _DataStore_DeleteNodeResolverMapEntry_Handler,
		},
		{
			MethodName: "RectifyNodeResolverMapEntries",
			Handler:    _DataStore_RectifyNodeResolverMapEntries_Handler,
		},
		{
			MethodName: "CreateRegistrationEntry",
			Handler:    _DataStore_CreateRegistrationEntry_Handler,
		},
		{
			MethodName: "FetchRegistrationEntry",
			Handler:    _DataStore_FetchRegistrationEntry_Handler,
		},
		{
			MethodName: "ListRegistrationEntries",
			Handler:    _DataStore_ListRegistrationEntries_Handler,
		},
		{
			MethodName: "UpdateRegistrationEntry",
			Handler:    _DataStore_UpdateRegistrationEntry_Handler,
		},
		{
			MethodName: "DeleteRegistrationEntry",
			Handler:    _DataStore_DeleteRegistrationEntry_Handler,
		},
		{
			MethodName: "CreateJoinToken",
			Handler:    _DataStore_CreateJoinToken_Handler,
		},
		{
			MethodName: "FetchJoinToken",
			Handler:    _DataStore_FetchJoinToken_Handler,
		},
		{
			MethodName: "DeleteJoinToken",
			Handler:    _DataStore_DeleteJoinToken_Handler,
		},
		{
			MethodName: "PruneJoinTokens",
			Handler:    _DataStore_PruneJoinTokens_Handler,
		},
		{
			MethodName: "Configure",
			Handler:    _DataStore_Configure_Handler,
		},
		{
			MethodName: "GetPluginInfo",
			Handler:    _DataStore_GetPluginInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "datastore.proto",
}

func init() { proto.RegisterFile("datastore.proto", fileDescriptor_datastore_e3e0d519b06ed1bf) }

var fileDescriptor_datastore_e3e0d519b06ed1bf = []byte{
	// 1562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0xef, 0x72, 0xd3, 0xd6,
	0x12, 0xbf, 0xc6, 0x97, 0x10, 0xaf, 0x0d, 0xb9, 0x28, 0x21, 0x24, 0xe6, 0xe2, 0x24, 0xba, 0x70,
	0x87, 0xbf, 0xf6, 0x34, 0x85, 0xf0, 0xa7, 0x50, 0x48, 0x02, 0x61, 0xd2, 0x29, 0x69, 0x46, 0xa1,
	0x85, 0x81, 0xce, 0x68, 0x24, 0xfb, 0xd8, 0x88, 0x3a, 0x3a, 0xaa, 0x74, 0x0c, 0xd5, 0x13, 0x74,
	0xa6, 0xdf, 0x3a, 0xfd, 0xda, 0x07, 0xe9, 0x23, 0xf5, 0x05, 0xfa, 0xbd, 0xa3, 0x73, 0x8e, 0x6c,
	0xcb, 0xd2, 0x4a, 0xb2, 0xa3, 0x7e, 0x8a, 0x7d, 0xce, 0xfe, 0xf9, 0xed, 0x9e, 0xdd, 0xf5, 0xee,
	0x06, 0x16, 0x3a, 0x06, 0x33, 0x3c, 0x46, 0x5d, 0xd2, 0x74, 0x5c, 0xca, 0xa8, 0xb2, 0xec, 0x39,
	0x96, 0x4b, 0x9a, 0x1e, 0x71, 0x3f, 0x12, 0xb7, 0x39, 0xbc, 0xad, 0x37, 0x7a, 0x94, 0xf6, 0xfa,
	0xa4, 0xc5, 0xa9, 0xcc, 0x41, 0xb7, 0xf5, 0xc9, 0x35, 0x1c, 0x87, 0xb8, 0x9e, 0xe0, 0xab, 0xdf,
	0xef, 0x59, 0xec, 0xfd, 0xc0, 0x6c, 0xb6, 0xe9, 0x71, 0xcb, 0x73, 0xac, 0x6e, 0x97, 0xb4, 0xb8,
	0x24, 0xc1, 0xd0, 0x6a, 0xd3, 0xe3, 0x63, 0x6a, 0xb7, 0x9c, 0xfe, 0xa0, 0x67, 0x85, 0x7f, 0x24,
	0xe7, 0x67, 0xb9, 0x38, 0xc5, 0x1f, 0xc1, 0xa2, 0xee, 0xc1, 0xdc, 0xce, 0xc0, 0xee, 0xf4, 0x89,
	0xb2, 0x01, 0x35, 0xe6, 0x0e, 0x3c, 0xa6, 0x77, 0xe8, 0xb1, 0x61, 0xd9, 0x2b, 0xa5, 0xf5, 0xd2,
	0xb5, 0x8a, 0x56, 0xe5, 0x67, 0xcf, 0xf8, 0x91, 0xb2, 0x0a, 0xf3, 0x6d, 0x43, 0x6f, 0x13, 0x97,
	0x79, 0x2b, 0xa7, 0xd6, 0x4b, 0xd7, 0x6a, 0xda, 0x99, 0xb6, 0xb1, 0x1b, 0x7c, 0x55, 0x5f, 0xc2,
	0xe2, 0xae, 0x4b, 0x0c, 0x46, 0x84, 0x34, 0x8d, 0xfc, 0x38, 0x20, 0x1e, 0x53, 0xb6, 0x60, 0xce,
	0xe4, 0x07, 0x5c, 0x5c, 0x75, 0xb3, 0xd1, 0x4c, 0x76, 0x4a, 0x53, 0xb2, 0x49, 0x6a, 0xf5, 0x00,
	0x96, 0xa2, 0xe2, 0x3c, 0x87, 0xda, 0x1e, 0x99, 0x59, 0xde, 0x3d, 0x50, 0xf6, 0x08, 0x6b, 0xbf,
	0x8f, 0xa2, 0xcb, 0x36, 0x39, 0xb0, 0x2b, 0xc2, 0x78, 0x42, 0x1c, 0x4b, 0xa0, 0x7c, 0x6d, 0x79,
	0x4c, 0x9c, 0x7a, 0x12, 0x87, 0xfa, 0x0d, 0x2c, 0x46, 0x4e, 0xa5, 0x92, 0xfb, 0x70, 0x46, 0xb0,
	0x79, 0x2b, 0xa5, 0xf5, 0x72, 0x0e, 0x2d, 0x21, 0x79, 0x80, 0xfa, 0x5b, 0xa7, 0x53, 0xe4, 0x6b,
	0x44, 0xc5, 0x9d, 0xd0, 0x0b, 0x2f, 0x61, 0x71, 0xdb, 0x71, 0x88, 0xdd, 0x29, 0x0c, 0x5e, 0x54,
	0xdc, 0x09, 0xe1, 0xdd, 0x87, 0xc5, 0x67, 0xa4, 0x4f, 0x26, 0xbd, 0x97, 0x23, 0x5a, 0x0e, 0x60,
	0x29, 0xca, 0x79, 0x42, 0x24, 0x3d, 0x58, 0x3a, 0xa0, 0x9d, 0x40, 0x0e, 0xed, 0x7f, 0x24, 0xee,
	0x4b, 0xc3, 0x79, 0x6e, 0x33, 0xd7, 0x57, 0x2e, 0x41, 0x45, 0xe4, 0xb7, 0x6e, 0x75, 0x24, 0x8e,
	0x79, 0x71, 0xb0, 0xdf, 0x51, 0x36, 0x61, 0xde, 0x23, 0x7d, 0xd2, 0x66, 0xd4, 0xe5, 0x59, 0x5a,
	0xdd, 0x5c, 0x96, 0xea, 0x64, 0xe6, 0x1f, 0xc9, 0x5b, 0x6d, 0x48, 0xa7, 0xf6, 0x60, 0x43, 0xe4,
	0x5b, 0x92, 0xba, 0xd0, 0x01, 0x3b, 0x70, 0x9a, 0x04, 0xdf, 0xa5, 0x11, 0xb7, 0x30, 0x23, 0x12,
	0x65, 0x08, 0x56, 0xf5, 0x3d, 0xa8, 0x69, 0x8a, 0xa4, 0xbf, 0x8a, 0xd0, 0xf4, 0x14, 0x36, 0x82,
	0xa4, 0x4a, 0x20, 0xb1, 0x86, 0x99, 0x97, 0xea, 0x48, 0xb5, 0x0f, 0x6a, 0x9a, 0x04, 0x89, 0x75,
	0x0f, 0xce, 0x10, 0x71, 0x24, 0xb3, 0x74, 0x3a, 0xb4, 0x21, 0x73, 0xf0, 0x04, 0x22, 0x76, 0xfe,
	0xe9, 0x27, 0xe8, 0x83, 0x9a, 0xa6, 0xa8, 0x60, 0xb3, 0x6c, 0xb8, 0xa2, 0x91, 0x36, 0xb3, 0xba,
	0x7e, 0xfa, 0x4b, 0x14, 0xa5, 0x8f, 0xc2, 0xd5, 0x0c, 0x7d, 0x05, 0x1b, 0xf8, 0x47, 0x09, 0xce,
	0x6f, 0x33, 0x46, 0x3c, 0x46, 0x3a, 0x01, 0x65, 0xae, 0x0c, 0xbd, 0x60, 0x70, 0x0e, 0x83, 0x59,
	0xd4, 0xd6, 0x03, 0x4d, 0x3a, 0xf3, 0x1d, 0xc2, 0xd3, 0xb5, 0xa2, 0x2d, 0x8e, 0x5d, 0x3e, 0x33,
	0x98, 0xf1, 0xca, 0x77, 0x88, 0x72, 0x0b, 0x94, 0xe0, 0x87, 0x57, 0xf7, 0x88, 0x6b, 0x19, 0x7d,
	0xdd, 0x1e, 0x1c, 0x9b, 0xc4, 0x5d, 0x29, 0x73, 0x86, 0xff, 0x04, 0x37, 0x47, 0xfc, 0xe2, 0x80,
	0x9f, 0x2b, 0x57, 0xe0, 0x1c, 0xa7, 0xb6, 0x29, 0xd3, 0x8d, 0x2e, 0x23, 0xee, 0xca, 0xbf, 0xd7,
	0x4b, 0xd7, 0xca, 0x5a, 0x2d, 0x38, 0x3d, 0xa0, 0x6c, 0x3b, 0x38, 0x53, 0x0d, 0x68, 0x88, 0x64,
	0x8c, 0xe1, 0x0f, 0x5f, 0xe5, 0x49, 0x34, 0xde, 0xae, 0x63, 0x2e, 0x8a, 0x0b, 0x90, 0xc1, 0x66,
	0xc2, 0x1a, 0xaa, 0x42, 0x3e, 0xc4, 0x89, 0x75, 0x3c, 0x82, 0xcb, 0xfc, 0x37, 0x1a, 0xb5, 0x22,
	0x35, 0xcb, 0x0d, 0x68, 0x60, 0xdc, 0x45, 0x01, 0xb4, 0xa0, 0x11, 0x14, 0x92, 0xc9, 0xfb, 0xb1,
	0xe8, 0x7f, 0x01, 0xe7, 0x4d, 0x5f, 0x27, 0x3f, 0x05, 0x82, 0x3d, 0xdd, 0x24, 0x5d, 0xea, 0x86,
	0xbf, 0x15, 0x97, 0x9a, 0xa2, 0x5f, 0x6c, 0x86, 0xfd, 0x62, 0x73, 0xdf, 0x66, 0x5b, 0x77, 0xbe,
	0x33, 0xfa, 0x03, 0xa2, 0x2d, 0x98, 0xfe, 0x73, 0xc1, 0xb4, 0xc3, 0x79, 0xd4, 0x2e, 0xac, 0xa1,
	0xaa, 0xa4, 0x39, 0xbb, 0x93, 0x81, 0x3f, 0x85, 0x41, 0xc3, 0xa8, 0xff, 0xb5, 0x04, 0x0d, 0xd1,
	0x13, 0xcc, 0xe4, 0x75, 0x24, 0x9c, 0x4f, 0xe5, 0x0e, 0xe7, 0x72, 0x42, 0x38, 0x9b, 0xb0, 0x86,
	0x42, 0x2a, 0xea, 0x29, 0x1f, 0x43, 0x43, 0x14, 0xcf, 0xd9, 0x82, 0xcd, 0x84, 0x35, 0x94, 0xbd,
	0x28, 0x88, 0xaf, 0xc3, 0xac, 0xd6, 0x48, 0xcf, 0xf2, 0x98, 0xcb, 0xeb, 0x48, 0x04, 0xe2, 0xdd,
	0xa8, 0x8a, 0xb5, 0x68, 0x7b, 0x10, 0x67, 0x1b, 0xe6, 0xd9, 0x1a, 0x2a, 0x58, 0x82, 0x5f, 0x85,
	0x79, 0x4e, 0x3b, 0xb2, 0x9d, 0x47, 0x8c, 0xbf, 0xdf, 0x51, 0x1f, 0xca, 0x2c, 0x45, 0x51, 0xa5,
	0xf0, 0xbe, 0x96, 0x39, 0x8a, 0x2b, 0x9e, 0xd1, 0xa4, 0x4f, 0x50, 0xdd, 0xf1, 0xc3, 0x7e, 0xc8,
	0x53, 0xee, 0x40, 0x25, 0x6c, 0x89, 0xc2, 0xe4, 0xc0, 0x7a, 0xa7, 0x11, 0x21, 0x2f, 0xe7, 0xfd,
	0x3e, 0xfd, 0xa4, 0x1b, 0xb6, 0xaf, 0xb7, 0xe9, 0xb1, 0x69, 0xd9, 0x5c, 0x13, 0x0f, 0xe7, 0x79,
	0x6d, 0x91, 0x5f, 0x6e, 0xdb, 0xfe, 0xee, 0xe8, 0x4a, 0xfd, 0xb3, 0x24, 0x6a, 0xc2, 0x24, 0xb2,
	0xb1, 0x9a, 0xf0, 0x25, 0xd4, 0x4c, 0x5f, 0x77, 0x0c, 0x97, 0xd8, 0x2c, 0xf4, 0x49, 0x75, 0xf3,
	0xbf, 0xb1, 0x72, 0x70, 0xc4, 0x5c, 0xcb, 0xee, 0x89, 0x7a, 0x00, 0xa6, 0x7f, 0xc8, 0x19, 0xf6,
	0x3b, 0xca, 0x1e, 0xe7, 0x1f, 0xd9, 0x23, 0x7a, 0xc1, 0xff, 0xa1, 0xad, 0xe7, 0xc8, 0x0f, 0x5a,
	0xd5, 0x1c, 0x73, 0x8a, 0xc0, 0x31, 0x8a, 0xe9, 0x72, 0x3e, 0x1c, 0x47, 0x61, 0xcc, 0x7f, 0x2f,
	0x4a, 0x52, 0xa2, 0xa5, 0xf2, 0xf5, 0x1e, 0x4c, 0x96, 0xa4, 0xcc, 0xf7, 0x1b, 0x16, 0xa2, 0xd7,
	0x61, 0x1d, 0x2a, 0x3a, 0xda, 0xdf, 0x84, 0xd5, 0xa4, 0xf0, 0xa0, 0xfb, 0x22, 0xac, 0x21, 0xb3,
	0xa4, 0xc2, 0x9b, 0xb0, 0x82, 0x14, 0x0e, 0xeb, 0x01, 0x54, 0xbe, 0xa2, 0x96, 0xfd, 0x8a, 0xfe,
	0x40, 0x6c, 0x65, 0x09, 0x4e, 0xb3, 0xe0, 0x83, 0x54, 0x2f, 0xbe, 0x28, 0xcb, 0x30, 0xc7, 0x7f,
	0xa3, 0x7c, 0x1e, 0x4c, 0x65, 0x4d, 0x7e, 0x53, 0xdf, 0xc2, 0xb2, 0xa8, 0x0c, 0x43, 0x01, 0xa1,
	0x25, 0x4f, 0x01, 0x3e, 0x50, 0xcb, 0xd6, 0x47, 0xc2, 0xaa, 0x9b, 0x1b, 0x58, 0x08, 0x8e, 0xb8,
	0x2b, 0x1f, 0xc2, 0x8f, 0xea, 0x3b, 0xb8, 0x18, 0x93, 0x2d, 0x0d, 0x3d, 0xb9, 0xf0, 0xdb, 0x70,
	0x81, 0x17, 0x96, 0x18, 0xee, 0x44, 0xfb, 0x03, 0x3b, 0x27, 0xc9, 0x0b, 0x83, 0xd2, 0x84, 0x65,
	0xf1, 0xb0, 0x39, 0xb1, 0xbc, 0x83, 0x8b, 0x31, 0xfa, 0xc2, 0xc0, 0x3c, 0x81, 0xe5, 0x43, 0x77,
	0x60, 0x8f, 0x64, 0x0f, 0xab, 0xd2, 0x55, 0x38, 0x97, 0xd0, 0xa6, 0x94, 0xb5, 0xb3, 0x24, 0xd2,
	0x87, 0xac, 0xc2, 0xc5, 0x98, 0x00, 0x81, 0x6e, 0xf3, 0xaf, 0x55, 0xa8, 0x04, 0x6d, 0xed, 0x51,
	0xa0, 0x5e, 0xb1, 0xa0, 0x36, 0xbe, 0xe9, 0x51, 0x6e, 0x62, 0x38, 0x13, 0xd6, 0x4b, 0xf5, 0x5b,
	0xf9, 0x88, 0xa5, 0x5b, 0xba, 0x50, 0x1d, 0xdb, 0xe5, 0x28, 0x37, 0x30, 0xe6, 0xf8, 0xa6, 0xa8,
	0x7e, 0x33, 0x17, 0xed, 0x48, 0xcf, 0xd8, 0x3a, 0x07, 0xd7, 0x13, 0xdf, 0x04, 0xe1, 0x7a, 0x92,
	0xf6, 0x43, 0x16, 0xd4, 0xc6, 0xd7, 0x32, 0xb8, 0xeb, 0x12, 0x76, 0x41, 0xb8, 0xeb, 0x12, 0x37,
	0x3d, 0x16, 0xd4, 0xc6, 0x57, 0x2c, 0xb8, 0xaa, 0x84, 0xbd, 0x0e, 0xae, 0x2a, 0x71, 0x6b, 0x63,
	0x41, 0x6d, 0x7c, 0x87, 0x82, 0xab, 0x4a, 0xd8, 0xd1, 0xe0, 0xaa, 0x12, 0xd7, 0x32, 0xbf, 0x94,
	0xc2, 0xda, 0x12, 0x1f, 0xe0, 0xb6, 0xd2, 0x43, 0x0b, 0x6b, 0xff, 0xea, 0xf7, 0xa6, 0xe6, 0x93,
	0x60, 0x7e, 0x2e, 0xc9, 0xe2, 0x12, 0xc7, 0x72, 0x37, 0x35, 0xfa, 0x50, 0x28, 0x5b, 0xd3, 0xb2,
	0x8d, 0xb9, 0x05, 0x19, 0x22, 0x70, 0xb7, 0xa4, 0x0f, 0x38, 0xb8, 0x5b, 0xb2, 0xa6, 0x95, 0x00,
	0x0c, 0xd2, 0xd5, 0xe3, 0x60, 0xd2, 0x27, 0x13, 0x1c, 0x4c, 0xd6, 0xf8, 0x10, 0x80, 0x41, 0xfa,
	0x77, 0x1c, 0x4c, 0xfa, 0xbc, 0x80, 0x83, 0xc9, 0x1a, 0x14, 0x7e, 0x2b, 0x41, 0x1d, 0xdf, 0xa5,
	0x29, 0x0f, 0xd2, 0x03, 0x31, 0x65, 0xcb, 0x54, 0x7f, 0x38, 0x0b, 0xeb, 0x18, 0x2a, 0x7c, 0x6b,
	0x86, 0xa3, 0xca, 0xdc, 0xd5, 0xe1, 0xa8, 0x72, 0x2c, 0xe9, 0x02, 0x54, 0xf8, 0xd2, 0x0b, 0x47,
	0x95, 0xb9, 0x91, 0xc3, 0x51, 0xe5, 0xd8, 0xb1, 0xfd, 0x5e, 0x82, 0xcb, 0xa9, 0xcb, 0x2a, 0xe5,
	0x11, 0x26, 0x3d, 0xcf, 0x4e, 0xad, 0xfe, 0x78, 0x46, 0xee, 0x58, 0x79, 0x8c, 0xf5, 0x8c, 0x59,
	0xe5, 0x11, 0xeb, 0x6c, 0xb3, 0xca, 0x23, 0xde, 0xd4, 0x0e, 0xcb, 0x63, 0x1c, 0x4b, 0x7a, 0x79,
	0x44, 0xa1, 0x6c, 0x4d, 0xcb, 0x36, 0x51, 0x1e, 0x13, 0x06, 0x9a, 0xf4, 0xf2, 0x88, 0xcf, 0x7a,
	0xe9, 0xe5, 0x31, 0x6d, 0x72, 0x1a, 0x95, 0xc7, 0x29, 0xde, 0x28, 0x7d, 0x60, 0xca, 0x2a, 0x8f,
	0xe9, 0x9e, 0x41, 0x86, 0x93, 0xac, 0xf2, 0x38, 0x3d, 0x98, 0xac, 0x29, 0xc8, 0x85, 0x85, 0x89,
	0xb9, 0x41, 0x69, 0xa6, 0x07, 0xdf, 0x64, 0xe3, 0x5d, 0x6f, 0xe5, 0xa6, 0x97, 0x3a, 0x29, 0x9c,
	0x8b, 0xce, 0x07, 0xca, 0xed, 0xd4, 0x20, 0x8b, 0x69, 0x6c, 0xe6, 0x25, 0x1f, 0x19, 0x39, 0x31,
	0x04, 0xe0, 0x46, 0x26, 0x4f, 0x17, 0xb8, 0x91, 0xd8, 0x74, 0xe1, 0xc2, 0xc2, 0x44, 0x6b, 0x8f,
	0xeb, 0x4c, 0x1e, 0x22, 0x70, 0x9d, 0xc8, 0xcc, 0xa0, 0xbc, 0x85, 0xca, 0x2e, 0xb5, 0xbb, 0x56,
	0x6f, 0xe0, 0x12, 0xe5, 0x6a, 0x74, 0xa0, 0x95, 0xff, 0x02, 0x1f, 0xde, 0x87, 0x4a, 0xfe, 0x9f,
	0x45, 0x36, 0x6c, 0xd7, 0xcf, 0xbe, 0x20, 0xec, 0x90, 0x5f, 0xef, 0xdb, 0x5d, 0xaa, 0x5c, 0x4f,
	0x64, 0x8c, 0xd0, 0x84, 0x3a, 0x6e, 0xe4, 0x21, 0x15, 0x7a, 0x76, 0xaa, 0x6f, 0x2b, 0x43, 0x43,
	0x0f, 0xff, 0x75, 0x58, 0x3a, 0x3c, 0x65, 0xce, 0xf1, 0xe5, 0xc9, 0xe7, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x14, 0xfe, 0x43, 0x8a, 0x3c, 0x20, 0x00, 0x00,
}
